$Id: regression_test.txt 92 2014-07-14 21:22:35Z mfms $

Testing protocol for Galant.

0. create a new graph with two nodes and one edge; give both nodes and the edge a color, weight, and label; add another node and edge using ^n and ^e, respectively.

1. open test (in Example_Graphs) and move some nodes around

2. run bfs on eight_node_graph (in Example_Graphs); in the middle of running the algorithm, change visibilities of weights and labels and move a few nodes around; these changes should persist during backward and forward motion as well as after the algorithm is done.

3. run dfs_d on eight_node_graph (in Example_Graphs), need node and edge labels, no weights, graph must be directed

4. run dijkstra on weighted_example (in Example_Graphs), with graph both undirected and directed; in undirected case, node 3 is distance 2 from the start via path 0-2-3; in the directed case it’s distance 3 via the edge 0->3; need weights on both edges and nodes

5. run kruskal on weighted_example, need edge weights only; there’s text commentary

6. run insertion_sort on sorting_test (in Example_Graphs), need node weights only

7. binary_tree on an empty graph, no weights or labels, try exporting an intermediate state

8. load 0_simple (in Crossing_Graphs) and make sure it draws properly (responds to changes in window size)

9. run both barycenter and mce (in Crossing-Algorithms) on 1_test (in Crossing Graphs), need node weights for barycenter

10. ditto for r_100_110_10_0_0p7 (in Crossing_Graphs)

11. run sifting on 1_test
