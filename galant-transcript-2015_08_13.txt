Last login: Thu Aug 13 08:11:15 on ttys001
<matt> ~ [12:28:00]
$ cd Temp-Git/
<matt> ~/Temp-Git [12:28:19]
$ cd galant
<matt> ~/Temp-Git/galant [12:28:24]
$ git branch kai ab9a59ab404329921c71597d4267784c9135b064
fatal: Not a valid branch point: 'ab9a59ab404329921c71597d4267784c9135b064'.
<matt> ~/Temp-Git/galant [12:28:43]
$ git branch kai v3.3
fatal: Not a valid object name: 'v3.3'.
<matt> ~/Temp-Git/galant [12:29:08]
$ git branch kai https://github.ncsu.edu/GalantTeam/galant/commit/ab9a59ab404329921c71597d4267784c9135b064
fatal: Not a valid object name: 'https://github.ncsu.edu/GalantTeam/galant/commit/ab9a59ab404329921c71597d4267784c9135b064'.
<matt> ~/Temp-Git/galant [12:31:22]
$ git branch kai https://github.ncsu.edu/GalantTeam/galant/ ab9a59ab404329921c71597d4267784c9135b064
usage: git branch [options] [-r | -a] [--merged | --no-merged]
   or: git branch [options] [-l] [-f] <branchname> [<start-point>]
   or: git branch [options] [-r] (-d | -D) <branchname>...
   or: git branch [options] (-m | -M) [<oldbranch>] <newbranch>

Generic options
    -v, --verbose         show hash and subject, give twice for upstream branch
    -q, --quiet           suppress informational messages
    -t, --track           set up tracking mode (see git-pull(1))
    --set-upstream        change upstream info
    -u, --set-upstream-to <upstream>
                          change the upstream info
    --unset-upstream      Unset the upstream info
    --color[=<when>]      use colored output
    -r, --remotes         act on remote-tracking branches
    --contains <commit>   print only branches that contain the commit
    --abbrev[=<n>]        use <n> digits to display SHA-1s

Specific git-branch actions:
    -a, --all             list both remote-tracking and local branches
    -d, --delete          delete fully merged branch
    -D                    delete branch (even if not merged)
    -m, --move            move/rename a branch and its reflog
    -M                    move/rename a branch, even if target exists
    --list                list branch names
    -l, --create-reflog   create the branch's reflog
    --edit-description    edit the description for the branch
    -f, --force           force creation, move/rename, deletion
    --no-merged <commit>  print only not merged branches
    --merged <commit>     print only merged branches
    --column[=<style>]    list branches in columns

<matt> ~/Temp-Git/galant [12:31:40]
$ git checkout threads
D	regression_test.txt
D	regression_tests.txt
A	testingGalant.docx
Switched to branch 'threads'
Your branch is up-to-date with 'origin/threads'.
<matt> ~/Temp-Git/galant [12:33:20]
$ git branch kai
<matt> ~/Temp-Git/galant [12:33:56]
$ git checkout https://github.ncsu.edu/GalantTeam/galant/commit/ab9a59ab404329921c71597d4267784c9135b064
error: pathspec 'https://github.ncsu.edu/GalantTeam/galant/commit/ab9a59ab404329921c71597d4267784c9135b064' did not match any file(s) known to git.
<matt> ~/Temp-Git/galant [12:34:29]
$ git checkout ab9a59ab404329921c71597d4267784c9135b064
fatal: reference is not a tree: ab9a59ab404329921c71597d4267784c9135b064
<matt> ~/Temp-Git/galant [12:34:50]
$ git checkout v3.3
error: pathspec 'v3.3' did not match any file(s) known to git.
<matt> ~/Temp-Git/galant [12:35:39]
$ git help checkout
<matt> ~/Temp-Git/galant [12:38:44]
$ git help checkout
<matt> ~/Temp-Git/galant [12:42:05]
$ git status
On branch threads
Your branch is up-to-date with 'origin/threads'.
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	new file:   testingGalant.docx

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	deleted:    regression_test.txt
	deleted:    regression_tests.txt

<matt> ~/Temp-Git/galant [12:42:11]
$ git rm regression_test.txt
rm 'regression_test.txt'
<matt> ~/Temp-Git/galant [12:42:50]
$ git rm regression_tests.txt
rm 'regression_tests.txt'
<matt> ~/Temp-Git/galant [12:43:21]
$ git status
On branch threads
Your branch is up-to-date with 'origin/threads'.
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	deleted:    regression_test.txt
	deleted:    regression_tests.txt
	new file:   testingGalant.docx

<matt> ~/Temp-Git/galant [12:43:27]
$ git commit
[threads 354bf68] First commit under kai.
 3 files changed, 53 deletions(-)
 delete mode 100644 regression_test.txt
 delete mode 100644 regression_tests.txt
 create mode 100644 testingGalant.docx
<matt> ~/Temp-Git/galant [12:43:58]
$ git checkout threads
Already on 'threads'
Your branch is ahead of 'origin/threads' by 1 commit.
  (use "git push" to publish your local commits)
<matt> ~/Temp-Git/galant [12:44:22]
$ git push
To https://github.ncsu.edu/GalantTeam/galant
 ! [rejected]        threads -> threads (fetch first)
error: failed to push some refs to 'https://github.ncsu.edu/GalantTeam/galant'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
<matt> ~/Temp-Git/galant [12:44:43]
$ git status
On branch threads
Your branch is ahead of 'origin/threads' by 1 commit.
  (use "git push" to publish your local commits)
nothing to commit, working directory clean
<matt> ~/Temp-Git/galant [12:45:11]
$ git pull
remote: Counting objects: 285, done.
remote: Compressing objects: 100% (165/165), done.
remote: Total 285 (delta 128), reused 38 (delta 38), pack-reused 32
Receiving objects: 100% (285/285), 1.11 MiB | 0 bytes/s, done.
Resolving deltas: 100% (132/132), completed with 32 local objects.
From https://github.ncsu.edu/GalantTeam/galant
   9a06c0e..eae0d35  threads    -> origin/threads
   de3ad73..36ca565  compiler   -> origin/compiler
   381f595..a533721  graphio    -> origin/graphio
   e3aa9a5..81f31d7  gui        -> origin/gui
   45ceafc..d4f70b4  master     -> origin/master
 * [new tag]         v3.2.1     -> v3.2.1
 * [new tag]         v3.3       -> v3.3
Merge made by the 'recursive' strategy.
 src/edu/ncsu/csc/Galant/Galant.java                  |  6 ++---
 .../ncsu/csc/Galant/algorithm/AlgorithmExecutor.java | 22 ++++++++++------
 .../csc/Galant/algorithm/code/CodeIntegrator.java    |  5 ++--
 .../ncsu/csc/Galant/algorithm/code/macro/Macros.java |  5 +++-
 .../csc/Galant/gui/editor/GAlgorithmEditorPanel.java |  3 +++
 .../ncsu/csc/Galant/gui/util/guiStepExecutor.java    | 31 ++++++++++++++++++++---
 .../csc/Galant/gui/window/panels/GraphPanel.java     | 10 +++++---
 7 files changed, 60 insertions(+), 22 deletions(-)
<matt> ~/Temp-Git/galant [12:45:45]
$ git status
On branch threads
Your branch is ahead of 'origin/threads' by 2 commits.
  (use "git push" to publish your local commits)
nothing to commit, working directory clean
<matt> ~/Temp-Git/galant [12:46:30]
$ git push
Counting objects: 5, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (5/5), done.
Writing objects: 100% (5/5), 100.16 KiB | 0 bytes/s, done.
Total 5 (delta 2), reused 1 (delta 0)
To https://github.ncsu.edu/GalantTeam/galant
   eae0d35..1bfea91  threads -> threads
<matt> ~/Temp-Git/galant [12:46:46]
$ git checkout kai
Switched to branch 'kai'
<matt> ~/Temp-Git/galant [12:47:05]
$ git merge threads
Updating 9a06c0e..1bfea91
Fast-forward
 regression_test.txt                                  |  27 -------------------
 regression_tests.txt                                 |  26 ------------------
 src/edu/ncsu/csc/Galant/Galant.java                  |   6 ++---
 .../ncsu/csc/Galant/algorithm/AlgorithmExecutor.java |  22 +++++++++------
 .../csc/Galant/algorithm/code/CodeIntegrator.java    |   5 ++--
 .../ncsu/csc/Galant/algorithm/code/macro/Macros.java |   5 +++-
 .../csc/Galant/gui/editor/GAlgorithmEditorPanel.java |   3 +++
 .../ncsu/csc/Galant/gui/util/guiStepExecutor.java    |  31 +++++++++++++++++++---
 .../csc/Galant/gui/window/panels/GraphPanel.java     |  10 ++++---
 testingGalant.docx                                   | Bin 0 -> 115299 bytes
 10 files changed, 60 insertions(+), 75 deletions(-)
 delete mode 100644 regression_test.txt
 delete mode 100644 regression_tests.txt
 create mode 100644 testingGalant.docx
<matt> ~/Temp-Git/galant [12:47:13]
$ git push
fatal: The current branch kai has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin kai

<matt> ~/Temp-Git/galant [12:47:52]
$ git push --set-upstream origin kai
Total 0 (delta 0), reused 0 (delta 0)
To https://github.ncsu.edu/GalantTeam/galant
 * [new branch]      kai -> kai
Branch kai set up to track remote branch kai from origin.
<matt> ~/Temp-Git/galant [12:48:40]
$ cd ..
<matt> ~/Temp-Git [13:28:02]
$ git clone github.ncsu.edu/GalantTeam/galant/
fatal: repository 'github.ncsu.edu/GalantTeam/galant/' does not exist
<matt> ~/Temp-Git [13:28:18]
$ git clone https://github.ncsu.edu/GalantTeam/galant
fatal: destination path 'galant' already exists and is not an empty directory.
<matt> ~/Temp-Git [13:28:50]
$ ls
galant/
<matt> ~/Temp-Git [13:28:58]
$ rm -rf galant
<matt> ~/Temp-Git [13:29:07]
$ git clone https://github.ncsu.edu/GalantTeam/galant
Cloning into 'galant'...
remote: Counting objects: 3469, done.
remote: Compressing objects: 100% (177/177), done.
remote: Total 3469 (delta 179), reused 80 (delta 80), pack-reused 3162
Receiving objects: 100% (3469/3469), 6.77 MiB | 2.39 MiB/s, done.
Resolving deltas: 100% (1825/1825), done.
Checking connectivity... done.
<matt> ~/Temp-Git [13:29:13]
$ git status
fatal: Not a git repository (or any of the parent directories): .git
<matt> ~/Temp-Git [13:29:21]
$ cd galant/
<matt> ~/Temp-Git/galant [13:29:30]
$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
nothing to commit, working directory clean
<matt> ~/Temp-Git/galant [13:29:33]
$ git checkout kai
Branch kai set up to track remote branch kai from origin.
Switched to a new branch 'kai'
<matt> ~/Temp-Git/galant [13:29:45]
$ ant
Buildfile: /Users/mfms/Temp-Git/galant/build.xml

clean:

compile:
    [mkdir] Created dir: /Users/mfms/Temp-Git/galant/build/classes
     [copy] Copying 5 files to /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/gui/editor/images
     [copy] Copying 24 files to /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/gui/window
    [javac] Compiling 63 source files to /Users/mfms/Temp-Git/galant/build/classes
    [javac] /Users/mfms/Temp-Git/galant/src/edu/ncsu/csc/Galant/gui/window/GraphWindow.java:152: error: cannot find symbol
    [javac]   private EdgeEditDialog edgeEditDialog;
    [javac]           ^
    [javac]   symbol:   class EdgeEditDialog
    [javac]   location: class GraphWindow
    [javac] /Users/mfms/Temp-Git/galant/src/edu/ncsu/csc/Galant/gui/window/GraphWindow.java:153: error: cannot find symbol
    [javac]   private DeleteNodeDialog deleteNodeDialog;  
    [javac]           ^
    [javac]   symbol:   class DeleteNodeDialog
    [javac]   location: class GraphWindow
    [javac] /Users/mfms/Temp-Git/galant/src/edu/ncsu/csc/Galant/gui/window/GraphWindow.java:870: error: cannot find symbol
    [javac]             edgeEditDialog = new EdgeEditDialog(frame, dispatch, GraphMode.CREATE_EDGE);
    [javac]                                  ^
    [javac]   symbol: class EdgeEditDialog
    [javac] /Users/mfms/Temp-Git/galant/src/edu/ncsu/csc/Galant/gui/window/GraphWindow.java:880: error: cannot find symbol
    [javac]             edgeEditDialog = new EdgeEditDialog(frame, dispatch, GraphMode.DELETE);
    [javac]                                  ^
    [javac]   symbol: class EdgeEditDialog
    [javac] /Users/mfms/Temp-Git/galant/src/edu/ncsu/csc/Galant/gui/window/GraphWindow.java:921: error: cannot find symbol
    [javac]             deleteNodeDialog = new DeleteNodeDialog(frame, dispatch);
    [javac]                                    ^
    [javac]   symbol: class DeleteNodeDialog
    [javac] 5 errors

BUILD FAILED
/Users/mfms/Temp-Git/galant/build.xml:33: Compile failed; see the compiler error output for details.

Total time: 2 seconds
<matt> ~/Temp-Git/galant [13:29:56]
$ git help clone
<matt> ~/Temp-Git/galant [13:32:32]
$ ls
Algorithms/                  documents/
Crossing-Algorithms/         galant_bugs.txt
Crossing_Graphs/             hs_err_pid25790.log
Example_Graphs/              kpresle_log.txt
README.md                    src/
Testing/                     testingGalant.docx
build/                       threads_algorithm_code.java
build.xml                    weight_occurences.txt
doc/
<matt> ~/Temp-Git/galant [13:32:41]
$ git status
On branch kai
Your branch is up-to-date with 'origin/kai'.
nothing to commit, working directory clean
<matt> ~/Temp-Git/galant [13:34:32]
$ git checkout master
Switched to branch 'master'
Your branch is up-to-date with 'origin/master'.
<matt> ~/Temp-Git/galant [13:34:44]
$ git checkout kai
Switched to branch 'kai'
Your branch is up-to-date with 'origin/kai'.
<matt> ~/Temp-Git/galant [13:34:59]
$ git pull https://github.ncsu.edu/GalantTeam/galant/commit/ab9a59ab404329921c71597d4267784c9135b064
fatal: https://github.ncsu.edu/GalantTeam/galant/commit/ab9a59ab404329921c71597d4267784c9135b064/info/refs not valid: is this a git repository?
<matt> ~/Temp-Git/galant [13:36:05]
$ git pull https://github.ncsu.edu/GalantTeam/galant/ ab9a59ab404329921c71597d4267784c9135b064
From https://github.ncsu.edu/GalantTeam/galant
 * branch            ab9a59ab404329921c71597d4267784c9135b064 -> FETCH_HEAD
Auto-merging src/edu/ncsu/csc/Galant/gui/window/panels/GraphPanel.java
Auto-merging src/edu/ncsu/csc/Galant/gui/window/GraphWindow.java
CONFLICT (content): Merge conflict in src/edu/ncsu/csc/Galant/gui/window/GraphWindow.java
Auto-merging src/edu/ncsu/csc/Galant/algorithm/code/macro/Macros.java
Auto-merging .gitignore
CONFLICT (content): Merge conflict in .gitignore
Automatic merge failed; fix conflicts and then commit the result.
<matt> ~/Temp-Git/galant [13:36:33]
$ e src/edu/ncsu/csc/Galant/gui/window/GraphWindow.java 
[1] 1992
<matt> ~/Temp-Git/galant [13:37:50]
$ [1]+  Done                    /Applications/Emacs.app/Contents/MacOS/Emacs "$@"
e .gitignore 
[1] 1998
<matt> ~/Temp-Git/galant [13:38:55]
$ [1]+  Done                    /Applications/Emacs.app/Contents/MacOS/Emacs "$@"
e ant
Buildfile: /Users/mfms/Temp-Git/galant/build.xml

clean:
   [delete] Deleting directory /Users/mfms/Temp-Git/galant/build

compile:
    [mkdir] Created dir: /Users/mfms/Temp-Git/galant/build/classes
     [copy] Copying 5 files to /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/gui/editor/images
     [copy] Copying 24 files to /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/gui/window
    [javac] Compiling 63 source files to /Users/mfms/Temp-Git/galant/build/classes
    [javac] Creating empty /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/algorithm/code/compiled/package-info.class

jar:
    [mkdir] Created dir: /Users/mfms/Temp-Git/galant/build/jar
      [jar] Building jar: /Users/mfms/Temp-Git/galant/build/jar/Galant.jar

run:
     [java] java.lang.NullPointerException
     [java] 	at edu.ncsu.csc.Galant.graph.component.GraphState.pauseExecution(GraphState.java:81)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Node.addNodeState(Node.java:779)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Node.<init>(Node.java:58)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Node.<init>(Node.java:46)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput(GraphMLParser.java:282)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph(GraphMLParser.java:374)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.<init>(GraphMLParser.java:65)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel.<init>(GGraphEditorPanel.java:38)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.addEditorTab(GTabbedPane.java:182)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.open(GTabbedPane.java:407)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.restoreLastState(GTabbedPane.java:217)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.<init>(GTabbedPane.java:131)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GEditorFrame.<init>(GEditorFrame.java:73)
     [java] 	at edu.ncsu.csc.Galant.Galant$1.run(Galant.java:26)
     [java] 	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)
     [java] 	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:749)
     [java] 	at java.awt.EventQueue.access$500(EventQueue.java:97)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:702)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:696)
     [java] 	at java.security.AccessController.doPrivileged(Native Method)
     [java] 	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)
     [java] 	at java.awt.EventQueue.dispatchEvent(EventQueue.java:719)
     [java] 	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
     [java] 	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
     [java] java.lang.NullPointerException
     [java] 	at edu.ncsu.csc.Galant.graph.component.GraphState.pauseExecution(GraphState.java:81)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Node.addNodeState(Node.java:779)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Node.<init>(Node.java:58)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Node.<init>(Node.java:46)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput(GraphMLParser.java:282)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph(GraphMLParser.java:374)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.<init>(GraphMLParser.java:65)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel.<init>(GGraphEditorPanel.java:38)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.addEditorTab(GTabbedPane.java:182)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.open(GTabbedPane.java:407)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.restoreLastState(GTabbedPane.java:217)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.<init>(GTabbedPane.java:131)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GEditorFrame.<init>(GEditorFrame.java:73)
     [java] 	at edu.ncsu.csc.Galant.Galant$1.run(Galant.java:26)
     [java] 	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)
     [java] 	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:749)
     [java] 	at java.awt.EventQueue.access$500(EventQueue.java:97)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:702)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:696)
     [java] 	at java.security.AccessController.doPrivileged(Native Method)
     [java] 	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)
     [java] 	at java.awt.EventQueue.dispatchEvent(EventQueue.java:719)
     [java] 	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
     [java] 	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
     [java] java.lang.NullPointerException
     [java] 	at edu.ncsu.csc.Galant.graph.component.GraphState.pauseExecution(GraphState.java:81)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Node.addNodeState(Node.java:779)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Node.<init>(Node.java:58)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Node.<init>(Node.java:46)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput(GraphMLParser.java:282)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph(GraphMLParser.java:374)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.<init>(GraphMLParser.java:65)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel.<init>(GGraphEditorPanel.java:38)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.addEditorTab(GTabbedPane.java:182)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.open(GTabbedPane.java:407)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.restoreLastState(GTabbedPane.java:217)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.<init>(GTabbedPane.java:131)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GEditorFrame.<init>(GEditorFrame.java:73)
     [java] 	at edu.ncsu.csc.Galant.Galant$1.run(Galant.java:26)
     [java] 	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)
     [java] 	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:749)
     [java] 	at java.awt.EventQueue.access$500(EventQueue.java:97)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:702)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:696)
     [java] 	at java.security.AccessController.doPrivileged(Native Method)
     [java] 	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)
     [java] 	at java.awt.EventQueue.dispatchEvent(EventQueue.java:719)
     [java] 	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
     [java] 	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
     [java] java.lang.NullPointerException
     [java] 	at edu.ncsu.csc.Galant.graph.component.GraphState.pauseExecution(GraphState.java:81)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Node.addNodeState(Node.java:779)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Node.<init>(Node.java:58)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Node.<init>(Node.java:46)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput(GraphMLParser.java:282)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph(GraphMLParser.java:374)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.<init>(GraphMLParser.java:65)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel.<init>(GGraphEditorPanel.java:38)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.addEditorTab(GTabbedPane.java:182)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.open(GTabbedPane.java:407)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.restoreLastState(GTabbedPane.java:217)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.<init>(GTabbedPane.java:131)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GEditorFrame.<init>(GEditorFrame.java:73)
     [java] 	at edu.ncsu.csc.Galant.Galant$1.run(Galant.java:26)
     [java] 	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)
     [java] 	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:749)
     [java] 	at java.awt.EventQueue.access$500(EventQueue.java:97)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:702)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:696)
     [java] 	at java.security.AccessController.doPrivileged(Native Method)
     [java] 	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)
     [java] 	at java.awt.EventQueue.dispatchEvent(EventQueue.java:719)
     [java] 	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
     [java] 	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
     [java] Java Result: 1

main:

BUILD SUCCESSFUL
Total time: 38 seconds
<matt> ~/Temp-Git/galant [13:40:21]
$ git status
On branch kai
Your branch is up-to-date with 'origin/kai'.
You have unmerged paths.
  (fix conflicts and run "git commit")

Changes to be committed:

	modified:   Algorithms/dfs_d.alg
	modified:   Algorithms/kruskal.alg
	modified:   build.xml
	modified:   documents/TechReport/2014_galant_tr.pdf
	modified:   src/edu/ncsu/csc/Galant/algorithm/Algorithm.java
	modified:   src/edu/ncsu/csc/Galant/algorithm/code/macro/FetchingMacro.java
	modified:   src/edu/ncsu/csc/Galant/algorithm/code/macro/Macro.java
	modified:   src/edu/ncsu/csc/Galant/algorithm/code/macro/Macros.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/Graph.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/Node.java
	modified:   src/edu/ncsu/csc/Galant/gui/window/panels/GraphPanel.java

Unmerged paths:
  (use "git add <file>..." to mark resolution)

	both modified:   .gitignore
	both modified:   src/edu/ncsu/csc/Galant/gui/window/GraphWindow.java

<matt> ~/Temp-Git/galant [13:41:19]
$ git checkout master
.gitignore: needs merge
src/edu/ncsu/csc/Galant/gui/window/GraphWindow.java: needs merge
error: you need to resolve your current index first
<matt> ~/Temp-Git/galant [13:41:34]
$ git checkout kai
.gitignore: needs merge
src/edu/ncsu/csc/Galant/gui/window/GraphWindow.java: needs merge
error: you need to resolve your current index first
<matt> ~/Temp-Git/galant [13:43:19]
$ git add .
<matt> ~/Temp-Git/galant [13:43:41]
$ git commit
[kai da5a341] Merge commit 'ab9a59ab404329921c71597d4267784c9135b064' of https://github.ncsu.edu/GalantTeam/galant into kai
<matt> ~/Temp-Git/galant [13:43:51]
$ git checkout master
Switched to branch 'master'
Your branch is up-to-date with 'origin/master'.
<matt> ~/Temp-Git/galant [13:43:57]
$ git pull https://github.ncsu.edu/GalantTeam/galant/ ab9a59ab404329921c71597d4267784c9135b064
From https://github.ncsu.edu/GalantTeam/galant
 * branch            ab9a59ab404329921c71597d4267784c9135b064 -> FETCH_HEAD
Already up-to-date.
<matt> ~/Temp-Git/galant [13:44:18]
$ ant
Buildfile: /Users/mfms/Temp-Git/galant/build.xml

clean:
   [delete] Deleting directory /Users/mfms/Temp-Git/galant/build

compile:
    [mkdir] Created dir: /Users/mfms/Temp-Git/galant/build/classes
     [copy] Copying 5 files to /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/gui/editor/images
     [copy] Copying 24 files to /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/gui/window
    [javac] Compiling 66 source files to /Users/mfms/Temp-Git/galant/build/classes
    [javac] Creating empty /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/algorithm/code/compiled/package-info.class

jar:
    [mkdir] Created dir: /Users/mfms/Temp-Git/galant/build/jar
      [jar] Building jar: /Users/mfms/Temp-Git/galant/build/jar/Galant.jar

run:
     [java] <= edu.ncsu.csc.Galant.GraphDispatch()
     [java] => edu.ncsu.csc.Galant.gui.window.GraphWindow()
     [java] ..-> edu.ncsu.csc.Galant.GraphDispatch.setWindowSize()
     [java] ..<- edu.ncsu.csc.Galant.GraphDispatch.setWindowSize()
     [java] <= edu.ncsu.csc.Galant.gui.window.GraphWindow()
     [java] => edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] <= edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] => edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ..-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] ....-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput
     [java] Line 1: Created new graph:
     [java] Line 2: <?xml version="1.0" encoding="UTF-8"?> 
     [java] Line 3: <graphml xmlns="http://graphml.graphdrawing.org/xmlns" 
     [java] Line 4: xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     [java] Line 5: xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns 
     [java] Line 6: http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
     [java] Line 7:  <graph  edgedefault="undirected">
     [java] Line 8:  </graph></graphml>
     [java] Line 1:  number of nodes = 4
     [java] Line 1:  number of edges = 0
     [java] Line 1:  processing 0th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 76.0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="0", label="", weight="76.0"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 76.0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 161
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 226
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="0" label="" weight="76.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 0, x = 161, y = 226, node = <node id="0" x="161" y="226"  color="#000000" label="" weight="76.0"  />
     [java] Line 1: adding node <node id="0" x="161" y="226"  color="#000000" label="" weight="76.0"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="0" x="161" y="226"  color="#000000" label="" weight="76.0"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 1th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 1
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 14.0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="1", label="", weight="14.0"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 14.0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 300
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 209
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="1" label="" weight="14.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 1, x = 300, y = 209, node = <node id="1" x="300" y="209"  color="#000000" label="" weight="14.0"  />
     [java] Line 1: adding node <node id="1" x="300" y="209"  color="#000000" label="" weight="14.0"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="1" x="300" y="209"  color="#000000" label="" weight="14.0"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 2th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 2
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 8.0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="2", label="", weight="8.0"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 8.0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 426
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 229
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="2" label="" weight="8.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 2, x = 426, y = 229, node = <node id="2" x="426" y="229"  color="#000000" label="" weight="8.0"  />
     [java] Line 1: adding node <node id="2" x="426" y="229"  color="#000000" label="" weight="8.0"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="2" x="426" y="229"  color="#000000" label="" weight="8.0"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 3th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 3
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 11.0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="3", label="", weight="11.0"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 11.0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 403
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 372
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="3" label="" weight="11.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 3, x = 403, y = 372, node = <node id="3" x="403" y="372"  color="#000000" label="" weight="11.0"  />
     [java] Line 1: adding node <node id="3" x="403" y="372"  color="#000000" label="" weight="11.0"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="3" x="403" y="372"  color="#000000" label="" weight="11.0"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] ....<- edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput:
     [java] <?xml version="1.0" encoding="UTF-8"?> 
     [java] <graphml xmlns="http://graphml.graphdrawing.org/xmlns" 
     [java] xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     [java] xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns 
     [java] http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
     [java]  <graph  edgedefault="undirected">
     [java]   <node id="0" x="161" y="226"  color="#000000" label="" weight="76.0"  />
     [java]   <node id="1" x="300" y="209"  color="#000000" label="" weight="14.0"  />
     [java]   <node id="2" x="426" y="229"  color="#000000" label="" weight="8.0"  />
     [java]   <node id="3" x="403" y="372"  color="#000000" label="" weight="11.0"  />
     [java]  </graph></graphml>
     [java] ..<- edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] <= edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] -> edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/sorting_test.graphml, fileName = sorting_test.graphml
     [java] <- edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState, numberOfFiles = 1
     [java] => edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] <= edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] => edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ..-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] ....-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput
     [java] Line 1: Created new graph:
     [java] Line 2: <?xml version="1.0" encoding="UTF-8"?> 
     [java] Line 3: <graphml xmlns="http://graphml.graphdrawing.org/xmlns" 
     [java] Line 4: xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     [java] Line 5: xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns 
     [java] Line 6: http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
     [java] Line 7:  <graph  name="my_name" edgedefault="directed">
     [java] Line 8:  </graph></graphml>
     [java] Line 1:  number of nodes = 6
     [java] Line 1:  number of edges = 5
     [java] Line 1:  processing 0th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #005533
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#005533", id="0", label="", weight="0.0"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 344
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 185
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#005533" id="0" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 0, x = 344, y = 185, node = <node id="0" x="344" y="185"  color="#005533" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="0" x="344" y="185"  color="#005533" label="" weight="0.0"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="0" x="344" y="185"  color="#005533" label="" weight="0.0"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 1th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 1
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = NaN
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [id="1", label="", weight="NaN"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = NaN
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 248
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 97
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  id="1" label="" weight="NaN"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 1, x = 248, y = 97, node = <node id="1" x="248" y="97"  label="" weight="NaN"  />
     [java] Line 1: adding node <node id="1" x="248" y="97"  label="" weight="NaN"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="1" x="248" y="97"  label="" weight="NaN"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 2th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 2
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="2", label="", weight="0.0"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 408
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 109
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="2" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 2, x = 408, y = 109, node = <node id="2" x="408" y="109"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="2" x="408" y="109"  color="#000000" label="" weight="0.0"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="2" x="408" y="109"  color="#000000" label="" weight="0.0"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 3th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 3
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = NaN
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="3", label="", weight="NaN"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = NaN
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 254
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 313
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="3" label="" weight="NaN"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 3, x = 254, y = 313, node = <node id="3" x="254" y="313"  color="#000000" label="" weight="NaN"  />
     [java] Line 1: adding node <node id="3" x="254" y="313"  color="#000000" label="" weight="NaN"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="3" x="254" y="313"  color="#000000" label="" weight="NaN"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 4th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 4
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="4", label="", weight="0.0"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 477
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 336
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="4" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 4, x = 477, y = 336, node = <node id="4" x="477" y="336"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="4" x="477" y="336"  color="#000000" label="" weight="0.0"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="4" x="477" y="336"  color="#000000" label="" weight="0.0"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 5th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 5
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="5", label="", weight="0.0"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 657
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 237
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="5" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 5, x = 657, y = 237, node = <node id="5" x="657" y="237"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="5" x="657" y="237"  color="#000000" label="" weight="0.0"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="5" x="657" y="237"  color="#000000" label="" weight="0.0"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 0th edge.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Edge.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Edge.addState, found = false
     [java] Line 1: Edge toString: source = null, target = null
     [java] java.lang.NullPointerException
     [java] 	at edu.ncsu.csc.Galant.graph.component.Edge.toString(Edge.java:109)
     [java] 	at java.lang.String.valueOf(String.java:2981)
     [java] 	at java.lang.StringBuilder.append(StringBuilder.java:131)
     [java] 	at edu.ncsu.csc.Galant.graph.component.GraphElement.<init>(GraphElement.java:67)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Edge.<init>(Edge.java:26)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput(GraphMLParser.java:218)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph(GraphMLParser.java:252)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.<init>(GraphMLParser.java:63)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel.<init>(GGraphEditorPanel.java:38)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.addEditorTab(GTabbedPane.java:197)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.open(GTabbedPane.java:449)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.restoreLastState(GTabbedPane.java:232)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.<init>(GTabbedPane.java:140)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GEditorFrame.<init>(GEditorFrame.java:73)
     [java] 	at edu.ncsu.csc.Galant.Galant$1.run(Galant.java:26)
     [java] 	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)
     [java] 	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:749)
     [java] 	at java.awt.EventQueue.access$500(EventQueue.java:97)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:702)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:696)
     [java] 	at java.security.AccessController.doPrivileged(Native Method)
     [java] 	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)
     [java] 	at java.awt.EventQueue.dispatchEvent(EventQueue.java:719)
     [java] 	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
     [java] 	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
     [java] ......<- edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] ....<= edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ....-> edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/sorting_test.graphml, fileName = sorting_test.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/test.graphml, fileName = test.graphml
     [java] ....<- edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState, numberOfFiles = 2
     [java] ....=> edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ....<= edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ....=> edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ......-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] ........-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput
     [java] Line 1: Created new graph:
     [java] Line 2: <?xml version="1.0" encoding="UTF-8"?> 
     [java] Line 3: <graphml xmlns="http://graphml.graphdrawing.org/xmlns" 
     [java] Line 4: xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     [java] Line 5: xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns 
     [java] Line 6: http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
     [java] Line 7:  <graph  name="dfs_example" edgedefault="directed">
     [java] Line 8:  </graph></graphml>
     [java] Line 1:  number of nodes = 8
     [java] Line 1:  number of edges = 12
     [java] Line 1:  processing 0th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="0", label="", weight="0.0"]
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 296
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 43
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="0" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 0, x = 296, y = 43, node = <node id="0" x="296" y="43"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="0" x="296" y="43"  color="#000000" label="" weight="0.0"  />
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="0" x="296" y="43"  color="#000000" label="" weight="0.0"  />
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 1th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 1
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="1", label="", weight="0.0"]
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 420
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 221
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="1" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 1, x = 420, y = 221, node = <node id="1" x="420" y="221"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="1" x="420" y="221"  color="#000000" label="" weight="0.0"  />
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="1" x="420" y="221"  color="#000000" label="" weight="0.0"  />
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 2th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 2
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="2", label="", weight="0.0"]
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 115
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 387
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="2" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 2, x = 115, y = 387, node = <node id="2" x="115" y="387"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="2" x="115" y="387"  color="#000000" label="" weight="0.0"  />
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="2" x="115" y="387"  color="#000000" label="" weight="0.0"  />
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 3th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 3
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="3", label="", weight="0.0"]
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 273
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 379
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="3" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 3, x = 273, y = 379, node = <node id="3" x="273" y="379"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="3" x="273" y="379"  color="#000000" label="" weight="0.0"  />
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="3" x="273" y="379"  color="#000000" label="" weight="0.0"  />
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 4th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 4
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="4", label="", weight="0.0"]
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 437
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 452
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="4" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 4, x = 437, y = 452, node = <node id="4" x="437" y="452"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="4" x="437" y="452"  color="#000000" label="" weight="0.0"  />
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="4" x="437" y="452"  color="#000000" label="" weight="0.0"  />
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 5th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 5
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="5", label="", weight="0.0"]
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 287
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 542
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="5" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 5, x = 287, y = 542, node = <node id="5" x="287" y="542"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="5" x="287" y="542"  color="#000000" label="" weight="0.0"  />
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="5" x="287" y="542"  color="#000000" label="" weight="0.0"  />
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 6th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 6
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="6", label="", weight="0.0"]
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 120
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 510
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="6" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 6, x = 120, y = 510, node = <node id="6" x="120" y="510"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="6" x="120" y="510"  color="#000000" label="" weight="0.0"  />
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="6" x="120" y="510"  color="#000000" label="" weight="0.0"  />
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 7th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 7
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="7", label="", weight="0.0"]
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 244
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 218
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="7" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 7, x = 244, y = 218, node = <node id="7" x="244" y="218"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="7" x="244" y="218"  color="#000000" label="" weight="0.0"  />
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="7" x="244" y="218"  color="#000000" label="" weight="0.0"  />
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 0th edge.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Edge.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Edge.addState, found = false
     [java] Line 1: Edge toString: source = null, target = null
     [java] java.lang.NullPointerException
     [java] 	at edu.ncsu.csc.Galant.graph.component.Edge.toString(Edge.java:109)
     [java] 	at java.lang.String.valueOf(String.java:2981)
     [java] 	at java.lang.StringBuilder.append(StringBuilder.java:131)
     [java] 	at edu.ncsu.csc.Galant.graph.component.GraphElement.<init>(GraphElement.java:67)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Edge.<init>(Edge.java:26)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput(GraphMLParser.java:218)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph(GraphMLParser.java:252)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.<init>(GraphMLParser.java:63)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel.<init>(GGraphEditorPanel.java:38)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.addEditorTab(GTabbedPane.java:197)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.open(GTabbedPane.java:449)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.restoreLastState(GTabbedPane.java:232)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.<init>(GTabbedPane.java:140)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GEditorFrame.<init>(GEditorFrame.java:73)
     [java] 	at edu.ncsu.csc.Galant.Galant$1.run(Galant.java:26)
     [java] 	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)
     [java] 	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:749)
     [java] 	at java.awt.EventQueue.access$500(EventQueue.java:97)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:702)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:696)
     [java] 	at java.security.AccessController.doPrivileged(Native Method)
     [java] 	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)
     [java] 	at java.awt.EventQueue.dispatchEvent(EventQueue.java:719)
     [java] 	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
     [java] 	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
     [java] ..........<- edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] ........<= edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ........-> edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/sorting_test.graphml, fileName = sorting_test.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/test.graphml, fileName = test.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/eight_node_graph.graphml, fileName = eight_node_graph.graphml
     [java] ........<- edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState, numberOfFiles = 3
     [java] ........=> edu.ncsu.csc.Galant.gui.editor.GAlgorithmEditorPanel()
     [java] ........<= edu.ncsu.csc.Galant.gui.editor.GAlgorithmEditorPanel()
     [java] ........-> edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/sorting_test.graphml, fileName = sorting_test.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/test.graphml, fileName = test.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/eight_node_graph.graphml, fileName = eight_node_graph.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Algorithms/dfs_d.alg, fileName = dfs_d.alg
     [java] ........<- edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState, numberOfFiles = 4
     [java] ........=> edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ........<= edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ........=> edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ..........-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] ............-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput
     [java] Line 1: Created new graph:
     [java] Line 2: <?xml version="1.0" encoding="UTF-8"?> 
     [java] Line 3: <graphml xmlns="http://graphml.graphdrawing.org/xmlns" 
     [java] Line 4: xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     [java] Line 5: xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns 
     [java] Line 6: http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
     [java] Line 7:  <graph  name="my_name" edgedefault="directed">
     [java] Line 8:  </graph></graphml>
     [java] Line 1:  number of nodes = 6
     [java] Line 1:  number of edges = 5
     [java] Line 1:  processing 0th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #005533
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 0
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#005533", id="0", label="", weight="0.0"]
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 344
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 185
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#005533" id="0" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 0, x = 344, y = 185, node = <node id="0" x="344" y="185"  color="#005533" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="0" x="344" y="185"  color="#005533" label="" weight="0.0"  />
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="0" x="344" y="185"  color="#005533" label="" weight="0.0"  />
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 1th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 1
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = NaN
     [java] ................<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [id="1", label="", weight="NaN"]
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = NaN
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 248
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 97
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  id="1" label="" weight="NaN"  />
     [java] Line 1: newState (element) = 0
     [java] ..................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 1, x = 248, y = 97, node = <node id="1" x="248" y="97"  label="" weight="NaN"  />
     [java] Line 1: adding node <node id="1" x="248" y="97"  label="" weight="NaN"  />
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="1" x="248" y="97"  label="" weight="NaN"  />
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 2th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 2
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="2", label="", weight="0.0"]
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 408
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 109
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="2" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 2, x = 408, y = 109, node = <node id="2" x="408" y="109"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="2" x="408" y="109"  color="#000000" label="" weight="0.0"  />
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="2" x="408" y="109"  color="#000000" label="" weight="0.0"  />
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 3th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 3
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = NaN
     [java] ................<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="3", label="", weight="NaN"]
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = NaN
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 254
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 313
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="3" label="" weight="NaN"  />
     [java] Line 1: newState (element) = 0
     [java] ..................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 3, x = 254, y = 313, node = <node id="3" x="254" y="313"  color="#000000" label="" weight="NaN"  />
     [java] Line 1: adding node <node id="3" x="254" y="313"  color="#000000" label="" weight="NaN"  />
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="3" x="254" y="313"  color="#000000" label="" weight="NaN"  />
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 4th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 4
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="4", label="", weight="0.0"]
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 477
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 336
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="4" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 4, x = 477, y = 336, node = <node id="4" x="477" y="336"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="4" x="477" y="336"  color="#000000" label="" weight="0.0"  />
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="4" x="477" y="336"  color="#000000" label="" weight="0.0"  />
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 5th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 5
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="5", label="", weight="0.0"]
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 657
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 237
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="5" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 5, x = 657, y = 237, node = <node id="5" x="657" y="237"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="5" x="657" y="237"  color="#000000" label="" weight="0.0"  />
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="5" x="657" y="237"  color="#000000" label="" weight="0.0"  />
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 0th edge.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Edge.addState, state number  = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Edge.addState, found = false
     [java] Line 1: Edge toString: source = null, target = null
     [java] java.lang.NullPointerException
     [java] 	at edu.ncsu.csc.Galant.graph.component.Edge.toString(Edge.java:109)
     [java] 	at java.lang.String.valueOf(String.java:2981)
     [java] 	at java.lang.StringBuilder.append(StringBuilder.java:131)
     [java] 	at edu.ncsu.csc.Galant.graph.component.GraphElement.<init>(GraphElement.java:67)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Edge.<init>(Edge.java:26)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput(GraphMLParser.java:218)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph(GraphMLParser.java:252)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.<init>(GraphMLParser.java:63)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel.<init>(GGraphEditorPanel.java:38)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.addEditorTab(GTabbedPane.java:197)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.open(GTabbedPane.java:449)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.restoreLastState(GTabbedPane.java:232)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.<init>(GTabbedPane.java:140)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GEditorFrame.<init>(GEditorFrame.java:73)
     [java] 	at edu.ncsu.csc.Galant.Galant$1.run(Galant.java:26)
     [java] 	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)
     [java] 	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:749)
     [java] 	at java.awt.EventQueue.access$500(EventQueue.java:97)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:702)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:696)
     [java] 	at java.security.AccessController.doPrivileged(Native Method)
     [java] 	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)
     [java] 	at java.awt.EventQueue.dispatchEvent(EventQueue.java:719)
     [java] 	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
     [java] 	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
     [java] ..............<- edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] ............<= edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ............-> edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/sorting_test.graphml, fileName = sorting_test.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/test.graphml, fileName = test.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/eight_node_graph.graphml, fileName = eight_node_graph.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Algorithms/dfs_d.alg, fileName = dfs_d.alg
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/test.graphml, fileName = test.graphml
     [java] ............<- edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState, numberOfFiles = 5
     [java] ............-> edu.ncsu.csc.Galant.GraphDispatch.setWindowSize()
     [java] ............<- edu.ncsu.csc.Galant.GraphDispatch.setWindowSize()
     [java] Line 1: Bounds retrieved for graph_window: java.awt.Rectangle[x=-1608,y=23,width=725,height=798]
     [java] Line 1: Bounds retrieved for text_editor: java.awt.Rectangle[x=-1048,y=23,width=1001,height=728]
     [java] ............-> edu.ncsu.csc.Galant.GraphDispatch.setWindowSize()
     [java] ............<- edu.ncsu.csc.Galant.GraphDispatch.setWindowSize()
     [java] Line 1: Size stored for graph_window: java.awt.Dimension[width=725,height=798]
     [java] Line 1: Size stored for text_editor: java.awt.Dimension[width=1001,height=728]
     [java] ............=> edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ............<= edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ............=> edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ..............-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] ................-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput
     [java] Line 1: Created new graph:
     [java] Line 2: <?xml version="1.0" encoding="UTF-8"?> 
     [java] Line 3: <graphml xmlns="http://graphml.graphdrawing.org/xmlns" 
     [java] Line 4: xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     [java] Line 5: xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns 
     [java] Line 6: http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
     [java] Line 7:  <graph  edgedefault="undirected">
     [java] Line 8:  </graph></graphml>
     [java] Line 1:  number of nodes = 0
     [java] Line 1:  number of edges = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput:
     [java] <?xml version="1.0" encoding="UTF-8"?> 
     [java] <graphml xmlns="http://graphml.graphdrawing.org/xmlns" 
     [java] xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     [java] xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns 
     [java] http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
     [java]  <graph  edgedefault="undirected">
     [java]  </graph></graphml>
     [java] ..............<- edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] ............<= edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ............-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] ..............-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput
     [java] Line 1: Created new graph:
     [java] Line 2: <?xml version="1.0" encoding="UTF-8"?> 
     [java] Line 3: <graphml xmlns="http://graphml.graphdrawing.org/xmlns" 
     [java] Line 4: xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     [java] Line 5: xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns 
     [java] Line 6: http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
     [java] Line 7:  <graph  edgedefault="undirected">
     [java] Line 8:  </graph></graphml>
     [java] Line 1:  number of nodes = 0
     [java] Line 1:  number of edges = 0
     [java] ..............<- edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput:
     [java] <?xml version="1.0" encoding="UTF-8"?> 
     [java] <graphml xmlns="http://graphml.graphdrawing.org/xmlns" 
     [java] xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     [java] xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns 
     [java] http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
     [java]  <graph  edgedefault="undirected">
     [java]  </graph></graphml>
     [java] ............<- edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] ............-> edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/sorting_test.graphml, fileName = sorting_test.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/test.graphml, fileName = test.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/eight_node_graph.graphml, fileName = eight_node_graph.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Algorithms/dfs_d.alg, fileName = dfs_d.alg
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/test.graphml, fileName = test.graphml
     [java] Line 1: serializeState, filePath = null, fileName = untitled.graphml
     [java] ............<- edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState, numberOfFiles = 5
     [java] ............-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] ..............-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput
     [java] Line 1: Created new graph:
     [java] Line 2: <?xml version="1.0" encoding="UTF-8"?> 
     [java] Line 3: <graphml xmlns="http://graphml.graphdrawing.org/xmlns" 
     [java] Line 4: xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     [java] Line 5: xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns 
     [java] Line 6: http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
     [java] Line 7:  <graph  edgedefault="undirected">
     [java] Line 8:  </graph></graphml>
     [java] Line 1:  number of nodes = 0
     [java] Line 1:  number of edges = 0
     [java] ..............<- edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput:
     [java] <?xml version="1.0" encoding="UTF-8"?> 
     [java] <graphml xmlns="http://graphml.graphdrawing.org/xmlns" 
     [java] xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     [java] xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns 
     [java] http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
     [java]  <graph  edgedefault="undirected">
     [java]  </graph></graphml>
     [java] ............<- edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )

main:

BUILD SUCCESSFUL
Total time: 1 minute 30 seconds
<matt> ~/Temp-Git/galant [13:45:58]
$ git checkout mfms
M	Algorithms/binary_tree.alg
Branch mfms set up to track remote branch mfms from origin.
Switched to a new branch 'mfms'
<matt> ~/Temp-Git/galant [13:56:00]
$ git checkout master
M	Algorithms/binary_tree.alg
Switched to branch 'master'
Your branch is up-to-date with 'origin/master'.
<matt> ~/Temp-Git/galant [13:56:16]
$ alias cp
alias cp='cp -i'
<matt> ~/Temp-Git/galant [13:56:59]
$ ls
Algorithms/                    hs_err_pid25790.log
Crossing-Algorithms/           kai_regression_tests.txt
Crossing_Graphs/               kpresle_log.txt
Example_Graphs/                older_galant_bugs.txt
README.md                      regression_test.txt
Testing/                       regression_tests.txt*
build/                         src/
build.xml                      testingGalant.docx
current_features_and_bugs.txt  threads_algorithm_code.java
documents/                     weight_occurences.txt
galant_bugs.txt*
<matt> ~/Temp-Git/galant [13:58:27]
$ ant
Buildfile: /Users/mfms/Temp-Git/galant/build.xml

clean:
   [delete] Deleting directory /Users/mfms/Temp-Git/galant/build

compile:
    [mkdir] Created dir: /Users/mfms/Temp-Git/galant/build/classes
     [copy] Copying 5 files to /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/gui/editor/images
     [copy] Copying 24 files to /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/gui/window
    [javac] Compiling 68 source files to /Users/mfms/Temp-Git/galant/build/classes
    [javac] Creating empty /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/algorithm/code/compiled/package-info.class

jar:
    [mkdir] Created dir: /Users/mfms/Temp-Git/galant/build/jar
      [jar] Building jar: /Users/mfms/Temp-Git/galant/build/jar/Galant.jar

run:

main:

BUILD SUCCESSFUL
Total time: 37 seconds
<matt> ~/Temp-Git/galant [13:59:10]
$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   Algorithms/binary_tree.alg
	modified:   Algorithms/dfs_d.alg
	modified:   Algorithms/insertion_sort.alg
	modified:   Algorithms/kruskal.alg
	modified:   Crossing-Algorithms/mce.alg
	modified:   Crossing-Algorithms/sifting.alg
	modified:   Example_Graphs/test.graphml
	modified:   src/edu/ncsu/csc/Galant/GraphDispatch.java
	modified:   src/edu/ncsu/csc/Galant/algorithm/Algorithm.java
	modified:   src/edu/ncsu/csc/Galant/algorithm/code/CodeIntegrator.java
	modified:   src/edu/ncsu/csc/Galant/algorithm/code/macro/FetchingMacro.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/Edge.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/Graph.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/GraphElement.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/GraphLayout.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/GraphState.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/Node.java
	modified:   src/edu/ncsu/csc/Galant/graph/parser/GraphMLParser.java
	modified:   src/edu/ncsu/csc/Galant/gui/editor/GAlgorithmEditorPanel.java
	modified:   src/edu/ncsu/csc/Galant/gui/editor/GEditorPanel.java
	modified:   src/edu/ncsu/csc/Galant/gui/editor/GTabbedPane.java
	modified:   src/edu/ncsu/csc/Galant/gui/util/EdgeEditDialog.java
	modified:   src/edu/ncsu/csc/Galant/gui/window/GraphWindow.java
	modified:   src/edu/ncsu/csc/Galant/gui/window/panels/ComponentEditPanel.java
	modified:   src/edu/ncsu/csc/Galant/gui/window/panels/GraphPanel.java
	modified:   src/edu/ncsu/csc/Galant/local/LayeredGraph.java
	modified:   src/edu/ncsu/csc/Galant/logging/LogHelper.java
	modified:   testingGalant.docx

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	galant_bugs.txt
	regression_tests.txt
	src/edu/ncsu/csc/Galant/graph/component/EdgeState.java
	src/edu/ncsu/csc/Galant/graph/component/NodeState.java

no changes added to commit (use "git add" and/or "git commit -a")
<matt> ~/Temp-Git/galant [13:59:19]
$ git add .
<matt> ~/Temp-Git/galant [13:59:34]
$ git commit
[master 001b519] Undoing all the changes I made since version 3.3
 32 files changed, 2476 insertions(+), 1760 deletions(-)
 rewrite Algorithms/insertion_sort.alg (61%)
 create mode 100755 galant_bugs.txt
 create mode 100755 regression_tests.txt
 rewrite src/edu/ncsu/csc/Galant/graph/component/Edge.java (76%)
 create mode 100755 src/edu/ncsu/csc/Galant/graph/component/EdgeState.java
 rewrite src/edu/ncsu/csc/Galant/graph/component/GraphElement.java (98%)
 rewrite src/edu/ncsu/csc/Galant/graph/component/Node.java (64%)
 create mode 100755 src/edu/ncsu/csc/Galant/graph/component/NodeState.java
 rewrite testingGalant.docx (74%)
<matt> ~/Temp-Git/galant [14:00:03]
$ git push
Counting objects: 53, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (46/46), done.
Writing objects: 100% (53/53), 119.36 KiB | 0 bytes/s, done.
Total 53 (delta 37), reused 7 (delta 1)
To https://github.ncsu.edu/GalantTeam/galant
   d4f70b4..001b519  master -> master
<matt> ~/Temp-Git/galant [14:00:10]
$ git merge --no-commit kai
Removing regression_tests.txt
Removing regression_test.txt
Automatic merge went well; stopped before committing as requested
<matt> ~/Temp-Git/galant [14:01:08]
$ ant
Buildfile: /Users/mfms/Temp-Git/galant/build.xml

clean:
   [delete] Deleting directory /Users/mfms/Temp-Git/galant/build

compile:
    [mkdir] Created dir: /Users/mfms/Temp-Git/galant/build/classes
     [copy] Copying 5 files to /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/gui/editor/images
     [copy] Copying 24 files to /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/gui/window
    [javac] Compiling 70 source files to /Users/mfms/Temp-Git/galant/build/classes
    [javac] Creating empty /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/algorithm/code/compiled/package-info.class

jar:
    [mkdir] Created dir: /Users/mfms/Temp-Git/galant/build/jar
      [jar] Building jar: /Users/mfms/Temp-Git/galant/build/jar/Galant.jar

run:
     [java] java.lang.NullPointerException
     [java] 	at edu.ncsu.csc.Galant.graph.component.GraphState.pauseExecution(GraphState.java:81)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Node.addNodeState(Node.java:779)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Node.<init>(Node.java:58)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Node.<init>(Node.java:46)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput(GraphMLParser.java:282)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph(GraphMLParser.java:374)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.<init>(GraphMLParser.java:65)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel.<init>(GGraphEditorPanel.java:38)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.addEditorTab(GTabbedPane.java:182)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.open(GTabbedPane.java:407)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.restoreLastState(GTabbedPane.java:217)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.<init>(GTabbedPane.java:131)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GEditorFrame.<init>(GEditorFrame.java:73)
     [java] 	at edu.ncsu.csc.Galant.Galant$1.run(Galant.java:26)
     [java] 	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)
     [java] 	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:749)
     [java] 	at java.awt.EventQueue.access$500(EventQueue.java:97)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:702)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:696)
     [java] 	at java.security.AccessController.doPrivileged(Native Method)
     [java] 	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)
     [java] 	at java.awt.EventQueue.dispatchEvent(EventQueue.java:719)
     [java] 	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
     [java] 	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
     [java] java.lang.NullPointerException
     [java] 	at edu.ncsu.csc.Galant.graph.component.GraphState.pauseExecution(GraphState.java:81)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Node.addNodeState(Node.java:779)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Node.<init>(Node.java:58)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Node.<init>(Node.java:46)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput(GraphMLParser.java:282)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph(GraphMLParser.java:374)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.<init>(GraphMLParser.java:65)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel.<init>(GGraphEditorPanel.java:38)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.addEditorTab(GTabbedPane.java:182)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.open(GTabbedPane.java:407)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.restoreLastState(GTabbedPane.java:217)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.<init>(GTabbedPane.java:131)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GEditorFrame.<init>(GEditorFrame.java:73)
     [java] 	at edu.ncsu.csc.Galant.Galant$1.run(Galant.java:26)
     [java] 	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)
     [java] 	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:749)
     [java] 	at java.awt.EventQueue.access$500(EventQueue.java:97)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:702)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:696)
     [java] 	at java.security.AccessController.doPrivileged(Native Method)
     [java] 	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)
     [java] 	at java.awt.EventQueue.dispatchEvent(EventQueue.java:719)
     [java] 	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
     [java] 	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
     [java] java.lang.NullPointerException
     [java] 	at edu.ncsu.csc.Galant.graph.component.GraphState.pauseExecution(GraphState.java:81)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Node.addNodeState(Node.java:779)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Node.<init>(Node.java:58)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Node.<init>(Node.java:46)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput(GraphMLParser.java:282)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph(GraphMLParser.java:374)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.<init>(GraphMLParser.java:65)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel.<init>(GGraphEditorPanel.java:38)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.addEditorTab(GTabbedPane.java:182)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.open(GTabbedPane.java:407)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.restoreLastState(GTabbedPane.java:217)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.<init>(GTabbedPane.java:131)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GEditorFrame.<init>(GEditorFrame.java:73)
     [java] 	at edu.ncsu.csc.Galant.Galant$1.run(Galant.java:26)
     [java] 	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)
     [java] 	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:749)
     [java] 	at java.awt.EventQueue.access$500(EventQueue.java:97)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:702)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:696)
     [java] 	at java.security.AccessController.doPrivileged(Native Method)
     [java] 	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)
     [java] 	at java.awt.EventQueue.dispatchEvent(EventQueue.java:719)
     [java] 	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
     [java] 	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
     [java] java.lang.NullPointerException
     [java] 	at edu.ncsu.csc.Galant.graph.component.GraphState.pauseExecution(GraphState.java:81)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Node.addNodeState(Node.java:779)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Node.<init>(Node.java:58)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Node.<init>(Node.java:46)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput(GraphMLParser.java:282)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph(GraphMLParser.java:374)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.<init>(GraphMLParser.java:65)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel.<init>(GGraphEditorPanel.java:38)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.addEditorTab(GTabbedPane.java:182)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.open(GTabbedPane.java:407)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.restoreLastState(GTabbedPane.java:217)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.<init>(GTabbedPane.java:131)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GEditorFrame.<init>(GEditorFrame.java:73)
     [java] 	at edu.ncsu.csc.Galant.Galant$1.run(Galant.java:26)
     [java] 	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)
     [java] 	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:749)
     [java] 	at java.awt.EventQueue.access$500(EventQueue.java:97)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:702)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:696)
     [java] 	at java.security.AccessController.doPrivileged(Native Method)
     [java] 	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)
     [java] 	at java.awt.EventQueue.dispatchEvent(EventQueue.java:719)
     [java] 	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
     [java] 	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
     [java] Java Result: 1

main:

BUILD SUCCESSFUL
Total time: 18 seconds
<matt> ~/Temp-Git/galant [14:01:33]
$ git revert
usage: git revert [options] <commit-ish>...
   or: git revert <subcommand>

    --quit                end revert or cherry-pick sequence
    --continue            resume revert or cherry-pick sequence
    --abort               cancel revert or cherry-pick sequence
    -n, --no-commit       don't automatically commit
    -e, --edit            edit the commit message
    -s, --signoff         add Signed-off-by:
    -m, --mainline <n>    parent number
    --rerere-autoupdate   update the index with reused conflict resolution if possible
    --strategy <strategy>
                          merge strategy
    -X, --strategy-option <option>
                          option for merge strategy
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit

<matt> ~/Temp-Git/galant [14:01:53]
$ git commit --
[master b06d7fd] Merge branch 'kai'
<matt> ~/Temp-Git/galant [14:03:54]
$ git revert b06d7fd
error: Commit b06d7fd58d0be67f577b380c72e6b28a8b04100e is a merge but no -m option was given.
fatal: revert failed
<matt> ~/Temp-Git/galant [14:04:28]
$ git revert -m b06d7fd
error: switch `m' expects a numerical value
usage: git revert [options] <commit-ish>...
   or: git revert <subcommand>

    --quit                end revert or cherry-pick sequence
    --continue            resume revert or cherry-pick sequence
    --abort               cancel revert or cherry-pick sequence
    -n, --no-commit       don't automatically commit
    -e, --edit            edit the commit message
    -s, --signoff         add Signed-off-by:
    -m, --mainline <n>    parent number
    --rerere-autoupdate   update the index with reused conflict resolution if possible
    --strategy <strategy>
                          merge strategy
    -X, --strategy-option <option>
                          option for merge strategy
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit

<matt> ~/Temp-Git/galant [14:04:39]
$ git revert 001b519b42278a5c5665217a99a39c5a014acf32
error: could not revert 001b519... Undoing all the changes I made since version 3.3
hint: after resolving the conflicts, mark the corrected paths
hint: with 'git add <paths>' or 'git rm <paths>'
hint: and commit the result with 'git commit'
<matt> ~/Temp-Git/galant [14:06:51]
$ git pull 001b519b42278a5c5665217a99a39c5a014acf32
M	Algorithms/binary_tree.alg
M	Algorithms/dfs_d.alg
M	Algorithms/insertion_sort.alg
M	Algorithms/kruskal.alg
M	Crossing-Algorithms/mce.alg
M	Crossing-Algorithms/sifting.alg
M	Example_Graphs/test.graphml
D	galant_bugs.txt
M	src/edu/ncsu/csc/Galant/GraphDispatch.java
M	src/edu/ncsu/csc/Galant/algorithm/Algorithm.java
M	src/edu/ncsu/csc/Galant/algorithm/code/CodeIntegrator.java
M	src/edu/ncsu/csc/Galant/algorithm/code/macro/FetchingMacro.java
M	src/edu/ncsu/csc/Galant/graph/component/Edge.java
D	src/edu/ncsu/csc/Galant/graph/component/EdgeState.java
M	src/edu/ncsu/csc/Galant/graph/component/Graph.java
M	src/edu/ncsu/csc/Galant/graph/component/GraphElement.java
M	src/edu/ncsu/csc/Galant/graph/component/GraphLayout.java
M	src/edu/ncsu/csc/Galant/graph/component/GraphState.java
M	src/edu/ncsu/csc/Galant/graph/component/Node.java
D	src/edu/ncsu/csc/Galant/graph/component/NodeState.java
M	src/edu/ncsu/csc/Galant/graph/parser/GraphMLParser.java
U	src/edu/ncsu/csc/Galant/gui/editor/GAlgorithmEditorPanel.java
M	src/edu/ncsu/csc/Galant/gui/editor/GEditorPanel.java
M	src/edu/ncsu/csc/Galant/gui/editor/GTabbedPane.java
M	src/edu/ncsu/csc/Galant/gui/util/EdgeEditDialog.java
U	src/edu/ncsu/csc/Galant/gui/window/GraphWindow.java
M	src/edu/ncsu/csc/Galant/gui/window/panels/ComponentEditPanel.java
U	src/edu/ncsu/csc/Galant/gui/window/panels/GraphPanel.java
M	src/edu/ncsu/csc/Galant/local/LayeredGraph.java
M	src/edu/ncsu/csc/Galant/logging/LogHelper.java
M	testingGalant.docx
Pull is not possible because you have unmerged files.
Please, fix them up in the work tree, and then use 'git add/rm <file>'
as appropriate to mark resolution and make a commit.
<matt> ~/Temp-Git/galant [14:07:28]
$ git status
On branch master
Your branch is ahead of 'origin/master' by 8 commits.
  (use "git push" to publish your local commits)
You are currently reverting commit 001b519.
  (fix conflicts and run "git revert --continue")
  (use "git revert --abort" to cancel the revert operation)

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	modified:   Algorithms/binary_tree.alg
	modified:   Algorithms/dfs_d.alg
	modified:   Algorithms/insertion_sort.alg
	modified:   Algorithms/kruskal.alg
	modified:   Crossing-Algorithms/mce.alg
	modified:   Crossing-Algorithms/sifting.alg
	modified:   Example_Graphs/test.graphml
	deleted:    galant_bugs.txt
	modified:   src/edu/ncsu/csc/Galant/GraphDispatch.java
	modified:   src/edu/ncsu/csc/Galant/algorithm/Algorithm.java
	modified:   src/edu/ncsu/csc/Galant/algorithm/code/CodeIntegrator.java
	modified:   src/edu/ncsu/csc/Galant/algorithm/code/macro/FetchingMacro.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/Edge.java
	deleted:    src/edu/ncsu/csc/Galant/graph/component/EdgeState.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/Graph.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/GraphElement.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/GraphLayout.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/GraphState.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/Node.java
	deleted:    src/edu/ncsu/csc/Galant/graph/component/NodeState.java
	modified:   src/edu/ncsu/csc/Galant/graph/parser/GraphMLParser.java
	modified:   src/edu/ncsu/csc/Galant/gui/editor/GEditorPanel.java
	modified:   src/edu/ncsu/csc/Galant/gui/editor/GTabbedPane.java
	modified:   src/edu/ncsu/csc/Galant/gui/util/EdgeEditDialog.java
	modified:   src/edu/ncsu/csc/Galant/gui/window/panels/ComponentEditPanel.java
	modified:   src/edu/ncsu/csc/Galant/local/LayeredGraph.java
	modified:   src/edu/ncsu/csc/Galant/logging/LogHelper.java
	modified:   testingGalant.docx

Unmerged paths:
  (use "git reset HEAD <file>..." to unstage)
  (use "git add <file>..." to mark resolution)

	both modified:   src/edu/ncsu/csc/Galant/gui/editor/GAlgorithmEditorPanel.java
	both modified:   src/edu/ncsu/csc/Galant/gui/window/GraphWindow.java
	both modified:   src/edu/ncsu/csc/Galant/gui/window/panels/GraphPanel.java

<matt> ~/Temp-Git/galant [14:07:55]
$ e src/edu/ncsu/csc/Galant/gui/editor/GAlgorithmEditorPanel.java
[1] 2214
<matt> ~/Temp-Git/galant [14:08:21]
$ e src/edu/ncsu/csc/Galant/gui/window/panels/GraphPanel.java 
[2] 2219
<matt> ~/Temp-Git/galant [14:09:21]
$ [2]+  Done                    /Applications/Emacs.app/Contents/MacOS/Emacs "$@"
e src/edu/ncsu/csc/Galant/gui/window/GraphWindow.java
[2] 2229
<matt> ~/Temp-Git/galant [14:10:42]
$ [2]+  Done                    /Applications/Emacs.app/Contents/MacOS/Emacs "$@"
ant
Buildfile: /Users/mfms/Temp-Git/galant/build.xml

clean:
   [delete] Deleting directory /Users/mfms/Temp-Git/galant/build

compile:
    [mkdir] Created dir: /Users/mfms/Temp-Git/galant/build/classes
     [copy] Copying 5 files to /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/gui/editor/images
     [copy] Copying 24 files to /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/gui/window
    [javac] Compiling 68 source files to /Users/mfms/Temp-Git/galant/build/classes
    [javac] Creating empty /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/algorithm/code/compiled/package-info.class

jar:
    [mkdir] Created dir: /Users/mfms/Temp-Git/galant/build/jar
      [jar] Building jar: /Users/mfms/Temp-Git/galant/build/jar/Galant.jar

run:
     [java] <= edu.ncsu.csc.Galant.GraphDispatch()
     [java] => edu.ncsu.csc.Galant.gui.window.GraphWindow()
     [java] ..-> edu.ncsu.csc.Galant.GraphDispatch.setWindowSize()
     [java] ..<- edu.ncsu.csc.Galant.GraphDispatch.setWindowSize()
     [java] <= edu.ncsu.csc.Galant.gui.window.GraphWindow()
     [java] => edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] <= edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] => edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ..-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] ....-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput
     [java] Line 1: Created new graph:
     [java] Line 2: <?xml version="1.0" encoding="UTF-8"?> 
     [java] Line 3: <graphml xmlns="http://graphml.graphdrawing.org/xmlns" 
     [java] Line 4: xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     [java] Line 5: xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns 
     [java] Line 6: http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
     [java] Line 7:  <graph  edgedefault="undirected">
     [java] Line 8:  </graph></graphml>
     [java] Line 1:  number of nodes = 4
     [java] Line 1:  number of edges = 0
     [java] Line 1:  processing 0th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 76.0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="0", label="", weight="76.0"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 76.0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 161
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 226
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="0" label="" weight="76.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 0, x = 161, y = 226, node = <node id="0" x="161" y="226"  color="#000000" label="" weight="76.0"  />
     [java] Line 1: adding node <node id="0" x="161" y="226"  color="#000000" label="" weight="76.0"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="0" x="161" y="226"  color="#000000" label="" weight="76.0"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 1th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 1
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 14.0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="1", label="", weight="14.0"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 14.0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 300
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 209
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="1" label="" weight="14.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 1, x = 300, y = 209, node = <node id="1" x="300" y="209"  color="#000000" label="" weight="14.0"  />
     [java] Line 1: adding node <node id="1" x="300" y="209"  color="#000000" label="" weight="14.0"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="1" x="300" y="209"  color="#000000" label="" weight="14.0"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 2th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 2
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 8.0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="2", label="", weight="8.0"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 8.0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 426
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 229
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="2" label="" weight="8.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 2, x = 426, y = 229, node = <node id="2" x="426" y="229"  color="#000000" label="" weight="8.0"  />
     [java] Line 1: adding node <node id="2" x="426" y="229"  color="#000000" label="" weight="8.0"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="2" x="426" y="229"  color="#000000" label="" weight="8.0"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 3th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 3
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 11.0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="3", label="", weight="11.0"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 11.0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 403
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 372
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="3" label="" weight="11.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 3, x = 403, y = 372, node = <node id="3" x="403" y="372"  color="#000000" label="" weight="11.0"  />
     [java] Line 1: adding node <node id="3" x="403" y="372"  color="#000000" label="" weight="11.0"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="3" x="403" y="372"  color="#000000" label="" weight="11.0"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] ....<- edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput:
     [java] <?xml version="1.0" encoding="UTF-8"?> 
     [java] <graphml xmlns="http://graphml.graphdrawing.org/xmlns" 
     [java] xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     [java] xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns 
     [java] http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
     [java]  <graph  edgedefault="undirected">
     [java]   <node id="0" x="161" y="226"  color="#000000" label="" weight="76.0"  />
     [java]   <node id="1" x="300" y="209"  color="#000000" label="" weight="14.0"  />
     [java]   <node id="2" x="426" y="229"  color="#000000" label="" weight="8.0"  />
     [java]   <node id="3" x="403" y="372"  color="#000000" label="" weight="11.0"  />
     [java]  </graph></graphml>
     [java] ..<- edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] <= edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] -> edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/sorting_test.graphml, fileName = sorting_test.graphml
     [java] <- edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState, numberOfFiles = 1
     [java] => edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] <= edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] => edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ..-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] ....-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput
     [java] Line 1: Created new graph:
     [java] Line 2: <?xml version="1.0" encoding="UTF-8"?> 
     [java] Line 3: <graphml xmlns="http://graphml.graphdrawing.org/xmlns" 
     [java] Line 4: xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     [java] Line 5: xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns 
     [java] Line 6: http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
     [java] Line 7:  <graph  name="my_name" edgedefault="directed">
     [java] Line 8:  </graph></graphml>
     [java] Line 1:  number of nodes = 6
     [java] Line 1:  number of edges = 5
     [java] Line 1:  processing 0th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #005533
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#005533", id="0", label="", weight="0.0"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 344
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 185
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#005533" id="0" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 0, x = 344, y = 185, node = <node id="0" x="344" y="185"  color="#005533" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="0" x="344" y="185"  color="#005533" label="" weight="0.0"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="0" x="344" y="185"  color="#005533" label="" weight="0.0"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 1th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 1
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = NaN
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [id="1", label="", weight="NaN"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = NaN
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 248
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 97
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  id="1" label="" weight="NaN"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 1, x = 248, y = 97, node = <node id="1" x="248" y="97"  label="" weight="NaN"  />
     [java] Line 1: adding node <node id="1" x="248" y="97"  label="" weight="NaN"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="1" x="248" y="97"  label="" weight="NaN"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 2th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 2
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="2", label="", weight="0.0"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 408
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 109
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="2" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 2, x = 408, y = 109, node = <node id="2" x="408" y="109"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="2" x="408" y="109"  color="#000000" label="" weight="0.0"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="2" x="408" y="109"  color="#000000" label="" weight="0.0"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 3th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 3
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = NaN
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="3", label="", weight="NaN"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = NaN
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 254
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 313
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="3" label="" weight="NaN"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 3, x = 254, y = 313, node = <node id="3" x="254" y="313"  color="#000000" label="" weight="NaN"  />
     [java] Line 1: adding node <node id="3" x="254" y="313"  color="#000000" label="" weight="NaN"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="3" x="254" y="313"  color="#000000" label="" weight="NaN"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 4th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 4
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="4", label="", weight="0.0"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 477
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 336
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="4" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 4, x = 477, y = 336, node = <node id="4" x="477" y="336"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="4" x="477" y="336"  color="#000000" label="" weight="0.0"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="4" x="477" y="336"  color="#000000" label="" weight="0.0"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 5th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 5
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="5", label="", weight="0.0"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 657
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 237
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="5" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 5, x = 657, y = 237, node = <node id="5" x="657" y="237"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="5" x="657" y="237"  color="#000000" label="" weight="0.0"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="5" x="657" y="237"  color="#000000" label="" weight="0.0"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 0th edge.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Edge.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Edge.addState, found = false
     [java] Line 1: Edge toString: source = null, target = null
     [java] java.lang.NullPointerException
     [java] 	at edu.ncsu.csc.Galant.graph.component.Edge.toString(Edge.java:109)
     [java] 	at java.lang.String.valueOf(String.java:2981)
     [java] 	at java.lang.StringBuilder.append(StringBuilder.java:131)
     [java] 	at edu.ncsu.csc.Galant.graph.component.GraphElement.<init>(GraphElement.java:67)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Edge.<init>(Edge.java:26)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput(GraphMLParser.java:218)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph(GraphMLParser.java:252)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.<init>(GraphMLParser.java:63)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel.<init>(GGraphEditorPanel.java:38)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.addEditorTab(GTabbedPane.java:197)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.open(GTabbedPane.java:449)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.restoreLastState(GTabbedPane.java:232)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.<init>(GTabbedPane.java:140)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GEditorFrame.<init>(GEditorFrame.java:73)
     [java] 	at edu.ncsu.csc.Galant.Galant$1.run(Galant.java:26)
     [java] 	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)
     [java] 	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:749)
     [java] 	at java.awt.EventQueue.access$500(EventQueue.java:97)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:702)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:696)
     [java] 	at java.security.AccessController.doPrivileged(Native Method)
     [java] 	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)
     [java] 	at java.awt.EventQueue.dispatchEvent(EventQueue.java:719)
     [java] 	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
     [java] 	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
     [java] ......<- edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] ....<= edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ....-> edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/sorting_test.graphml, fileName = sorting_test.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/test.graphml, fileName = test.graphml
     [java] ....<- edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState, numberOfFiles = 2
     [java] ....=> edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ....<= edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ....=> edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ......-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] ........-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput
     [java] Line 1: Created new graph:
     [java] Line 2: <?xml version="1.0" encoding="UTF-8"?> 
     [java] Line 3: <graphml xmlns="http://graphml.graphdrawing.org/xmlns" 
     [java] Line 4: xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     [java] Line 5: xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns 
     [java] Line 6: http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
     [java] Line 7:  <graph  name="dfs_example" edgedefault="directed">
     [java] Line 8:  </graph></graphml>
     [java] Line 1:  number of nodes = 8
     [java] Line 1:  number of edges = 12
     [java] Line 1:  processing 0th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="0", label="", weight="0.0"]
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 296
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 43
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="0" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 0, x = 296, y = 43, node = <node id="0" x="296" y="43"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="0" x="296" y="43"  color="#000000" label="" weight="0.0"  />
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="0" x="296" y="43"  color="#000000" label="" weight="0.0"  />
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 1th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 1
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="1", label="", weight="0.0"]
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 420
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 221
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="1" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 1, x = 420, y = 221, node = <node id="1" x="420" y="221"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="1" x="420" y="221"  color="#000000" label="" weight="0.0"  />
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="1" x="420" y="221"  color="#000000" label="" weight="0.0"  />
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 2th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 2
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="2", label="", weight="0.0"]
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 115
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 387
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="2" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 2, x = 115, y = 387, node = <node id="2" x="115" y="387"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="2" x="115" y="387"  color="#000000" label="" weight="0.0"  />
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="2" x="115" y="387"  color="#000000" label="" weight="0.0"  />
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 3th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 3
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="3", label="", weight="0.0"]
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 273
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 379
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="3" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 3, x = 273, y = 379, node = <node id="3" x="273" y="379"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="3" x="273" y="379"  color="#000000" label="" weight="0.0"  />
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="3" x="273" y="379"  color="#000000" label="" weight="0.0"  />
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 4th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 4
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="4", label="", weight="0.0"]
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 437
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 452
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="4" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 4, x = 437, y = 452, node = <node id="4" x="437" y="452"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="4" x="437" y="452"  color="#000000" label="" weight="0.0"  />
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="4" x="437" y="452"  color="#000000" label="" weight="0.0"  />
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 5th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 5
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="5", label="", weight="0.0"]
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 287
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 542
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="5" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 5, x = 287, y = 542, node = <node id="5" x="287" y="542"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="5" x="287" y="542"  color="#000000" label="" weight="0.0"  />
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="5" x="287" y="542"  color="#000000" label="" weight="0.0"  />
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 6th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 6
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="6", label="", weight="0.0"]
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 120
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 510
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="6" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 6, x = 120, y = 510, node = <node id="6" x="120" y="510"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="6" x="120" y="510"  color="#000000" label="" weight="0.0"  />
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="6" x="120" y="510"  color="#000000" label="" weight="0.0"  />
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 7th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 7
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="7", label="", weight="0.0"]
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 244
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 218
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="7" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 7, x = 244, y = 218, node = <node id="7" x="244" y="218"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="7" x="244" y="218"  color="#000000" label="" weight="0.0"  />
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="7" x="244" y="218"  color="#000000" label="" weight="0.0"  />
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 0th edge.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Edge.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Edge.addState, found = false
     [java] Line 1: Edge toString: source = null, target = null
     [java] java.lang.NullPointerException
     [java] 	at edu.ncsu.csc.Galant.graph.component.Edge.toString(Edge.java:109)
     [java] 	at java.lang.String.valueOf(String.java:2981)
     [java] 	at java.lang.StringBuilder.append(StringBuilder.java:131)
     [java] 	at edu.ncsu.csc.Galant.graph.component.GraphElement.<init>(GraphElement.java:67)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Edge.<init>(Edge.java:26)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput(GraphMLParser.java:218)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph(GraphMLParser.java:252)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.<init>(GraphMLParser.java:63)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel.<init>(GGraphEditorPanel.java:38)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.addEditorTab(GTabbedPane.java:197)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.open(GTabbedPane.java:449)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.restoreLastState(GTabbedPane.java:232)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.<init>(GTabbedPane.java:140)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GEditorFrame.<init>(GEditorFrame.java:73)
     [java] 	at edu.ncsu.csc.Galant.Galant$1.run(Galant.java:26)
     [java] 	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)
     [java] 	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:749)
     [java] 	at java.awt.EventQueue.access$500(EventQueue.java:97)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:702)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:696)
     [java] 	at java.security.AccessController.doPrivileged(Native Method)
     [java] 	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)
     [java] 	at java.awt.EventQueue.dispatchEvent(EventQueue.java:719)
     [java] 	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
     [java] 	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
     [java] ..........<- edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] ........<= edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ........-> edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/sorting_test.graphml, fileName = sorting_test.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/test.graphml, fileName = test.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/eight_node_graph.graphml, fileName = eight_node_graph.graphml
     [java] ........<- edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState, numberOfFiles = 3
     [java] ........=> edu.ncsu.csc.Galant.gui.editor.GAlgorithmEditorPanel()
     [java] ........<= edu.ncsu.csc.Galant.gui.editor.GAlgorithmEditorPanel()
     [java] ........-> edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/sorting_test.graphml, fileName = sorting_test.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/test.graphml, fileName = test.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/eight_node_graph.graphml, fileName = eight_node_graph.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Algorithms/dfs_d.alg, fileName = dfs_d.alg
     [java] ........<- edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState, numberOfFiles = 4
     [java] ........=> edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ........<= edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ........=> edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ..........-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] ............-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput
     [java] Line 1: Created new graph:
     [java] Line 2: <?xml version="1.0" encoding="UTF-8"?> 
     [java] Line 3: <graphml xmlns="http://graphml.graphdrawing.org/xmlns" 
     [java] Line 4: xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     [java] Line 5: xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns 
     [java] Line 6: http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
     [java] Line 7:  <graph  name="my_name" edgedefault="directed">
     [java] Line 8:  </graph></graphml>
     [java] Line 1:  number of nodes = 6
     [java] Line 1:  number of edges = 5
     [java] Line 1:  processing 0th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #005533
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 0
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#005533", id="0", label="", weight="0.0"]
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 344
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 185
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#005533" id="0" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 0, x = 344, y = 185, node = <node id="0" x="344" y="185"  color="#005533" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="0" x="344" y="185"  color="#005533" label="" weight="0.0"  />
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="0" x="344" y="185"  color="#005533" label="" weight="0.0"  />
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 1th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 1
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = NaN
     [java] ................<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [id="1", label="", weight="NaN"]
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = NaN
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 248
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 97
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  id="1" label="" weight="NaN"  />
     [java] Line 1: newState (element) = 0
     [java] ..................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 1, x = 248, y = 97, node = <node id="1" x="248" y="97"  label="" weight="NaN"  />
     [java] Line 1: adding node <node id="1" x="248" y="97"  label="" weight="NaN"  />
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="1" x="248" y="97"  label="" weight="NaN"  />
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 2th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 2
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="2", label="", weight="0.0"]
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 408
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 109
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="2" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 2, x = 408, y = 109, node = <node id="2" x="408" y="109"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="2" x="408" y="109"  color="#000000" label="" weight="0.0"  />
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="2" x="408" y="109"  color="#000000" label="" weight="0.0"  />
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 3th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 3
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = NaN
     [java] ................<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="3", label="", weight="NaN"]
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = NaN
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 254
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 313
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="3" label="" weight="NaN"  />
     [java] Line 1: newState (element) = 0
     [java] ..................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 3, x = 254, y = 313, node = <node id="3" x="254" y="313"  color="#000000" label="" weight="NaN"  />
     [java] Line 1: adding node <node id="3" x="254" y="313"  color="#000000" label="" weight="NaN"  />
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="3" x="254" y="313"  color="#000000" label="" weight="NaN"  />
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 4th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 4
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="4", label="", weight="0.0"]
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 477
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 336
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="4" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 4, x = 477, y = 336, node = <node id="4" x="477" y="336"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="4" x="477" y="336"  color="#000000" label="" weight="0.0"  />
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="4" x="477" y="336"  color="#000000" label="" weight="0.0"  />
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 5th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 5
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="5", label="", weight="0.0"]
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 657
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 237
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="5" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 5, x = 657, y = 237, node = <node id="5" x="657" y="237"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="5" x="657" y="237"  color="#000000" label="" weight="0.0"  />
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="5" x="657" y="237"  color="#000000" label="" weight="0.0"  />
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 0th edge.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Edge.addState, state number  = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Edge.addState, found = false
     [java] Line 1: Edge toString: source = null, target = null
     [java] java.lang.NullPointerException
     [java] 	at edu.ncsu.csc.Galant.graph.component.Edge.toString(Edge.java:109)
     [java] 	at java.lang.String.valueOf(String.java:2981)
     [java] 	at java.lang.StringBuilder.append(StringBuilder.java:131)
     [java] 	at edu.ncsu.csc.Galant.graph.component.GraphElement.<init>(GraphElement.java:67)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Edge.<init>(Edge.java:26)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput(GraphMLParser.java:218)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph(GraphMLParser.java:252)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.<init>(GraphMLParser.java:63)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel.<init>(GGraphEditorPanel.java:38)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.addEditorTab(GTabbedPane.java:197)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.open(GTabbedPane.java:449)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.restoreLastState(GTabbedPane.java:232)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.<init>(GTabbedPane.java:140)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GEditorFrame.<init>(GEditorFrame.java:73)
     [java] 	at edu.ncsu.csc.Galant.Galant$1.run(Galant.java:26)
     [java] 	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)
     [java] 	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:749)
     [java] 	at java.awt.EventQueue.access$500(EventQueue.java:97)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:702)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:696)
     [java] 	at java.security.AccessController.doPrivileged(Native Method)
     [java] 	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)
     [java] 	at java.awt.EventQueue.dispatchEvent(EventQueue.java:719)
     [java] 	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
     [java] 	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
     [java] ..............<- edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] ............<= edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ............-> edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/sorting_test.graphml, fileName = sorting_test.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/test.graphml, fileName = test.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/eight_node_graph.graphml, fileName = eight_node_graph.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Algorithms/dfs_d.alg, fileName = dfs_d.alg
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/test.graphml, fileName = test.graphml
     [java] ............<- edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState, numberOfFiles = 5
     [java] ............-> edu.ncsu.csc.Galant.GraphDispatch.setWindowSize()
     [java] ............<- edu.ncsu.csc.Galant.GraphDispatch.setWindowSize()
     [java] Line 1: Bounds retrieved for graph_window: java.awt.Rectangle[x=-1608,y=23,width=725,height=798]
     [java] Line 1: Bounds retrieved for text_editor: java.awt.Rectangle[x=-1048,y=23,width=1001,height=728]
     [java] ............-> edu.ncsu.csc.Galant.GraphDispatch.setWindowSize()
     [java] ............<- edu.ncsu.csc.Galant.GraphDispatch.setWindowSize()
     [java] Line 1: Size stored for graph_window: java.awt.Dimension[width=725,height=798]
     [java] Line 1: Size stored for text_editor: java.awt.Dimension[width=1001,height=728]

main:

BUILD SUCCESSFUL
Total time: 18 seconds
<matt> ~/Temp-Git/galant [14:11:29]
$ git status
On branch master
Your branch is ahead of 'origin/master' by 8 commits.
  (use "git push" to publish your local commits)
You are currently reverting commit 001b519.
  (fix conflicts and run "git revert --continue")
  (use "git revert --abort" to cancel the revert operation)

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	modified:   Algorithms/binary_tree.alg
	modified:   Algorithms/dfs_d.alg
	modified:   Algorithms/insertion_sort.alg
	modified:   Algorithms/kruskal.alg
	modified:   Crossing-Algorithms/mce.alg
	modified:   Crossing-Algorithms/sifting.alg
	modified:   Example_Graphs/test.graphml
	deleted:    galant_bugs.txt
	modified:   src/edu/ncsu/csc/Galant/GraphDispatch.java
	modified:   src/edu/ncsu/csc/Galant/algorithm/Algorithm.java
	modified:   src/edu/ncsu/csc/Galant/algorithm/code/CodeIntegrator.java
	modified:   src/edu/ncsu/csc/Galant/algorithm/code/macro/FetchingMacro.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/Edge.java
	deleted:    src/edu/ncsu/csc/Galant/graph/component/EdgeState.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/Graph.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/GraphElement.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/GraphLayout.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/GraphState.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/Node.java
	deleted:    src/edu/ncsu/csc/Galant/graph/component/NodeState.java
	modified:   src/edu/ncsu/csc/Galant/graph/parser/GraphMLParser.java
	modified:   src/edu/ncsu/csc/Galant/gui/editor/GEditorPanel.java
	modified:   src/edu/ncsu/csc/Galant/gui/editor/GTabbedPane.java
	modified:   src/edu/ncsu/csc/Galant/gui/util/EdgeEditDialog.java
	modified:   src/edu/ncsu/csc/Galant/gui/window/panels/ComponentEditPanel.java
	modified:   src/edu/ncsu/csc/Galant/local/LayeredGraph.java
	modified:   src/edu/ncsu/csc/Galant/logging/LogHelper.java
	modified:   testingGalant.docx

Unmerged paths:
  (use "git reset HEAD <file>..." to unstage)
  (use "git add <file>..." to mark resolution)

	both modified:   src/edu/ncsu/csc/Galant/gui/editor/GAlgorithmEditorPanel.java
	both modified:   src/edu/ncsu/csc/Galant/gui/window/GraphWindow.java
	both modified:   src/edu/ncsu/csc/Galant/gui/window/panels/GraphPanel.java

<matt> ~/Temp-Git/galant [14:11:38]
$ git reset HEAD .
Unstaged changes after reset:
M	Algorithms/binary_tree.alg
M	Algorithms/dfs_d.alg
M	Algorithms/insertion_sort.alg
M	Algorithms/kruskal.alg
M	Crossing-Algorithms/mce.alg
M	Crossing-Algorithms/sifting.alg
M	Example_Graphs/test.graphml
D	galant_bugs.txt
M	src/edu/ncsu/csc/Galant/GraphDispatch.java
M	src/edu/ncsu/csc/Galant/algorithm/Algorithm.java
M	src/edu/ncsu/csc/Galant/algorithm/code/CodeIntegrator.java
M	src/edu/ncsu/csc/Galant/algorithm/code/macro/FetchingMacro.java
M	src/edu/ncsu/csc/Galant/graph/component/Edge.java
D	src/edu/ncsu/csc/Galant/graph/component/EdgeState.java
M	src/edu/ncsu/csc/Galant/graph/component/Graph.java
M	src/edu/ncsu/csc/Galant/graph/component/GraphElement.java
M	src/edu/ncsu/csc/Galant/graph/component/GraphLayout.java
M	src/edu/ncsu/csc/Galant/graph/component/GraphState.java
M	src/edu/ncsu/csc/Galant/graph/component/Node.java
D	src/edu/ncsu/csc/Galant/graph/component/NodeState.java
M	src/edu/ncsu/csc/Galant/graph/parser/GraphMLParser.java
M	src/edu/ncsu/csc/Galant/gui/editor/GAlgorithmEditorPanel.java
M	src/edu/ncsu/csc/Galant/gui/editor/GEditorPanel.java
M	src/edu/ncsu/csc/Galant/gui/editor/GTabbedPane.java
M	src/edu/ncsu/csc/Galant/gui/util/EdgeEditDialog.java
M	src/edu/ncsu/csc/Galant/gui/window/GraphWindow.java
M	src/edu/ncsu/csc/Galant/gui/window/panels/ComponentEditPanel.java
M	src/edu/ncsu/csc/Galant/gui/window/panels/GraphPanel.java
M	src/edu/ncsu/csc/Galant/local/LayeredGraph.java
M	src/edu/ncsu/csc/Galant/logging/LogHelper.java
M	testingGalant.docx
<matt> ~/Temp-Git/galant [14:12:14]
$ ant
Buildfile: /Users/mfms/Temp-Git/galant/build.xml

clean:
   [delete] Deleting directory /Users/mfms/Temp-Git/galant/build

compile:
    [mkdir] Created dir: /Users/mfms/Temp-Git/galant/build/classes
     [copy] Copying 5 files to /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/gui/editor/images
     [copy] Copying 24 files to /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/gui/window
    [javac] Compiling 68 source files to /Users/mfms/Temp-Git/galant/build/classes
    [javac] Creating empty /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/algorithm/code/compiled/package-info.class

jar:
    [mkdir] Created dir: /Users/mfms/Temp-Git/galant/build/jar
      [jar] Building jar: /Users/mfms/Temp-Git/galant/build/jar/Galant.jar

run:
     [java] <= edu.ncsu.csc.Galant.GraphDispatch()
     [java] => edu.ncsu.csc.Galant.gui.window.GraphWindow()
     [java] ..-> edu.ncsu.csc.Galant.GraphDispatch.setWindowSize()
     [java] ..<- edu.ncsu.csc.Galant.GraphDispatch.setWindowSize()
     [java] <= edu.ncsu.csc.Galant.gui.window.GraphWindow()
     [java] => edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] <= edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] => edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ..-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] ....-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput
     [java] Line 1: Created new graph:
     [java] Line 2: <?xml version="1.0" encoding="UTF-8"?> 
     [java] Line 3: <graphml xmlns="http://graphml.graphdrawing.org/xmlns" 
     [java] Line 4: xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     [java] Line 5: xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns 
     [java] Line 6: http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
     [java] Line 7:  <graph  edgedefault="undirected">
     [java] Line 8:  </graph></graphml>
     [java] Line 1:  number of nodes = 4
     [java] Line 1:  number of edges = 0
     [java] Line 1:  processing 0th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 76.0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="0", label="", weight="76.0"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 76.0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 161
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 226
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="0" label="" weight="76.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 0, x = 161, y = 226, node = <node id="0" x="161" y="226"  color="#000000" label="" weight="76.0"  />
     [java] Line 1: adding node <node id="0" x="161" y="226"  color="#000000" label="" weight="76.0"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="0" x="161" y="226"  color="#000000" label="" weight="76.0"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 1th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 1
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 14.0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="1", label="", weight="14.0"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 14.0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 300
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 209
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="1" label="" weight="14.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 1, x = 300, y = 209, node = <node id="1" x="300" y="209"  color="#000000" label="" weight="14.0"  />
     [java] Line 1: adding node <node id="1" x="300" y="209"  color="#000000" label="" weight="14.0"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="1" x="300" y="209"  color="#000000" label="" weight="14.0"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 2th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 2
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 8.0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="2", label="", weight="8.0"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 8.0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 426
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 229
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="2" label="" weight="8.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 2, x = 426, y = 229, node = <node id="2" x="426" y="229"  color="#000000" label="" weight="8.0"  />
     [java] Line 1: adding node <node id="2" x="426" y="229"  color="#000000" label="" weight="8.0"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="2" x="426" y="229"  color="#000000" label="" weight="8.0"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 3th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 3
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 11.0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="3", label="", weight="11.0"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 11.0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 403
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 372
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="3" label="" weight="11.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 3, x = 403, y = 372, node = <node id="3" x="403" y="372"  color="#000000" label="" weight="11.0"  />
     [java] Line 1: adding node <node id="3" x="403" y="372"  color="#000000" label="" weight="11.0"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="3" x="403" y="372"  color="#000000" label="" weight="11.0"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] ....<- edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput:
     [java] <?xml version="1.0" encoding="UTF-8"?> 
     [java] <graphml xmlns="http://graphml.graphdrawing.org/xmlns" 
     [java] xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     [java] xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns 
     [java] http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
     [java]  <graph  edgedefault="undirected">
     [java]   <node id="0" x="161" y="226"  color="#000000" label="" weight="76.0"  />
     [java]   <node id="1" x="300" y="209"  color="#000000" label="" weight="14.0"  />
     [java]   <node id="2" x="426" y="229"  color="#000000" label="" weight="8.0"  />
     [java]   <node id="3" x="403" y="372"  color="#000000" label="" weight="11.0"  />
     [java]  </graph></graphml>
     [java] ..<- edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] <= edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] -> edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/sorting_test.graphml, fileName = sorting_test.graphml
     [java] <- edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState, numberOfFiles = 1
     [java] => edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] <= edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] => edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ..-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] ....-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput
     [java] Line 1: Created new graph:
     [java] Line 2: <?xml version="1.0" encoding="UTF-8"?> 
     [java] Line 3: <graphml xmlns="http://graphml.graphdrawing.org/xmlns" 
     [java] Line 4: xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     [java] Line 5: xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns 
     [java] Line 6: http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
     [java] Line 7:  <graph  name="my_name" edgedefault="directed">
     [java] Line 8:  </graph></graphml>
     [java] Line 1:  number of nodes = 6
     [java] Line 1:  number of edges = 5
     [java] Line 1:  processing 0th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #005533
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#005533", id="0", label="", weight="0.0"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 344
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 185
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#005533" id="0" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 0, x = 344, y = 185, node = <node id="0" x="344" y="185"  color="#005533" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="0" x="344" y="185"  color="#005533" label="" weight="0.0"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="0" x="344" y="185"  color="#005533" label="" weight="0.0"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 1th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 1
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = NaN
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [id="1", label="", weight="NaN"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = NaN
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 248
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 97
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  id="1" label="" weight="NaN"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 1, x = 248, y = 97, node = <node id="1" x="248" y="97"  label="" weight="NaN"  />
     [java] Line 1: adding node <node id="1" x="248" y="97"  label="" weight="NaN"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="1" x="248" y="97"  label="" weight="NaN"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 2th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 2
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="2", label="", weight="0.0"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 408
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 109
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="2" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 2, x = 408, y = 109, node = <node id="2" x="408" y="109"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="2" x="408" y="109"  color="#000000" label="" weight="0.0"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="2" x="408" y="109"  color="#000000" label="" weight="0.0"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 3th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 3
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = NaN
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="3", label="", weight="NaN"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = NaN
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 254
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 313
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="3" label="" weight="NaN"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 3, x = 254, y = 313, node = <node id="3" x="254" y="313"  color="#000000" label="" weight="NaN"  />
     [java] Line 1: adding node <node id="3" x="254" y="313"  color="#000000" label="" weight="NaN"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="3" x="254" y="313"  color="#000000" label="" weight="NaN"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 4th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 4
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="4", label="", weight="0.0"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 477
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 336
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="4" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 4, x = 477, y = 336, node = <node id="4" x="477" y="336"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="4" x="477" y="336"  color="#000000" label="" weight="0.0"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="4" x="477" y="336"  color="#000000" label="" weight="0.0"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 5th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 5
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="5", label="", weight="0.0"]
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 657
     [java] Line 1: newState (element) = 0
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 237
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="5" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..........-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..........<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 5, x = 657, y = 237, node = <node id="5" x="657" y="237"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="5" x="657" y="237"  color="#000000" label="" weight="0.0"  />
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="5" x="657" y="237"  color="#000000" label="" weight="0.0"  />
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 0th edge.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ........-> edu.ncsu.csc.Galant.graph.component.Edge.addState, state number  = 0
     [java] ........<- edu.ncsu.csc.Galant.graph.component.Edge.addState, found = false
     [java] Line 1: Edge toString: source = null, target = null
     [java] java.lang.NullPointerException
     [java] 	at edu.ncsu.csc.Galant.graph.component.Edge.toString(Edge.java:109)
     [java] 	at java.lang.String.valueOf(String.java:2981)
     [java] 	at java.lang.StringBuilder.append(StringBuilder.java:131)
     [java] 	at edu.ncsu.csc.Galant.graph.component.GraphElement.<init>(GraphElement.java:67)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Edge.<init>(Edge.java:26)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput(GraphMLParser.java:218)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph(GraphMLParser.java:252)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.<init>(GraphMLParser.java:63)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel.<init>(GGraphEditorPanel.java:38)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.addEditorTab(GTabbedPane.java:197)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.open(GTabbedPane.java:449)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.restoreLastState(GTabbedPane.java:232)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.<init>(GTabbedPane.java:140)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GEditorFrame.<init>(GEditorFrame.java:73)
     [java] 	at edu.ncsu.csc.Galant.Galant$1.run(Galant.java:26)
     [java] 	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)
     [java] 	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:749)
     [java] 	at java.awt.EventQueue.access$500(EventQueue.java:97)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:702)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:696)
     [java] 	at java.security.AccessController.doPrivileged(Native Method)
     [java] 	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)
     [java] 	at java.awt.EventQueue.dispatchEvent(EventQueue.java:719)
     [java] 	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
     [java] 	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
     [java] ......<- edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] ....<= edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ....-> edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/sorting_test.graphml, fileName = sorting_test.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/test.graphml, fileName = test.graphml
     [java] ....<- edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState, numberOfFiles = 2
     [java] ....=> edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ....<= edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ....=> edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ......-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] ........-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput
     [java] Line 1: Created new graph:
     [java] Line 2: <?xml version="1.0" encoding="UTF-8"?> 
     [java] Line 3: <graphml xmlns="http://graphml.graphdrawing.org/xmlns" 
     [java] Line 4: xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     [java] Line 5: xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns 
     [java] Line 6: http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
     [java] Line 7:  <graph  name="dfs_example" edgedefault="directed">
     [java] Line 8:  </graph></graphml>
     [java] Line 1:  number of nodes = 8
     [java] Line 1:  number of edges = 12
     [java] Line 1:  processing 0th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="0", label="", weight="0.0"]
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 296
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 43
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="0" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 0, x = 296, y = 43, node = <node id="0" x="296" y="43"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="0" x="296" y="43"  color="#000000" label="" weight="0.0"  />
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="0" x="296" y="43"  color="#000000" label="" weight="0.0"  />
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 1th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 1
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="1", label="", weight="0.0"]
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 420
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 221
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="1" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 1, x = 420, y = 221, node = <node id="1" x="420" y="221"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="1" x="420" y="221"  color="#000000" label="" weight="0.0"  />
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="1" x="420" y="221"  color="#000000" label="" weight="0.0"  />
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 2th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 2
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="2", label="", weight="0.0"]
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 115
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 387
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="2" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 2, x = 115, y = 387, node = <node id="2" x="115" y="387"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="2" x="115" y="387"  color="#000000" label="" weight="0.0"  />
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="2" x="115" y="387"  color="#000000" label="" weight="0.0"  />
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 3th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 3
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="3", label="", weight="0.0"]
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 273
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 379
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="3" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 3, x = 273, y = 379, node = <node id="3" x="273" y="379"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="3" x="273" y="379"  color="#000000" label="" weight="0.0"  />
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="3" x="273" y="379"  color="#000000" label="" weight="0.0"  />
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 4th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 4
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="4", label="", weight="0.0"]
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 437
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 452
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="4" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 4, x = 437, y = 452, node = <node id="4" x="437" y="452"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="4" x="437" y="452"  color="#000000" label="" weight="0.0"  />
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="4" x="437" y="452"  color="#000000" label="" weight="0.0"  />
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 5th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 5
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="5", label="", weight="0.0"]
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 287
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 542
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="5" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 5, x = 287, y = 542, node = <node id="5" x="287" y="542"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="5" x="287" y="542"  color="#000000" label="" weight="0.0"  />
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="5" x="287" y="542"  color="#000000" label="" weight="0.0"  />
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 6th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 6
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="6", label="", weight="0.0"]
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 120
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 510
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="6" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 6, x = 120, y = 510, node = <node id="6" x="120" y="510"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="6" x="120" y="510"  color="#000000" label="" weight="0.0"  />
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="6" x="120" y="510"  color="#000000" label="" weight="0.0"  />
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 7th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 7
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="7", label="", weight="0.0"]
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 244
     [java] Line 1: newState (element) = 0
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 218
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="7" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..............-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..............<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 7, x = 244, y = 218, node = <node id="7" x="244" y="218"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="7" x="244" y="218"  color="#000000" label="" weight="0.0"  />
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="7" x="244" y="218"  color="#000000" label="" weight="0.0"  />
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 0th edge.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ............-> edu.ncsu.csc.Galant.graph.component.Edge.addState, state number  = 0
     [java] ............<- edu.ncsu.csc.Galant.graph.component.Edge.addState, found = false
     [java] Line 1: Edge toString: source = null, target = null
     [java] java.lang.NullPointerException
     [java] 	at edu.ncsu.csc.Galant.graph.component.Edge.toString(Edge.java:109)
     [java] 	at java.lang.String.valueOf(String.java:2981)
     [java] 	at java.lang.StringBuilder.append(StringBuilder.java:131)
     [java] 	at edu.ncsu.csc.Galant.graph.component.GraphElement.<init>(GraphElement.java:67)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Edge.<init>(Edge.java:26)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput(GraphMLParser.java:218)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph(GraphMLParser.java:252)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.<init>(GraphMLParser.java:63)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel.<init>(GGraphEditorPanel.java:38)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.addEditorTab(GTabbedPane.java:197)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.open(GTabbedPane.java:449)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.restoreLastState(GTabbedPane.java:232)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.<init>(GTabbedPane.java:140)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GEditorFrame.<init>(GEditorFrame.java:73)
     [java] 	at edu.ncsu.csc.Galant.Galant$1.run(Galant.java:26)
     [java] 	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)
     [java] 	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:749)
     [java] 	at java.awt.EventQueue.access$500(EventQueue.java:97)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:702)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:696)
     [java] 	at java.security.AccessController.doPrivileged(Native Method)
     [java] 	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)
     [java] 	at java.awt.EventQueue.dispatchEvent(EventQueue.java:719)
     [java] 	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
     [java] 	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
     [java] ..........<- edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] ........<= edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ........-> edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/sorting_test.graphml, fileName = sorting_test.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/test.graphml, fileName = test.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/eight_node_graph.graphml, fileName = eight_node_graph.graphml
     [java] ........<- edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState, numberOfFiles = 3
     [java] ........=> edu.ncsu.csc.Galant.gui.editor.GAlgorithmEditorPanel()
     [java] ........<= edu.ncsu.csc.Galant.gui.editor.GAlgorithmEditorPanel()
     [java] ........-> edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/sorting_test.graphml, fileName = sorting_test.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/test.graphml, fileName = test.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/eight_node_graph.graphml, fileName = eight_node_graph.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Algorithms/dfs_d.alg, fileName = dfs_d.alg
     [java] ........<- edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState, numberOfFiles = 4
     [java] ........=> edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ........<= edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ........=> edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ..........-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] ............-> edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput
     [java] Line 1: Created new graph:
     [java] Line 2: <?xml version="1.0" encoding="UTF-8"?> 
     [java] Line 3: <graphml xmlns="http://graphml.graphdrawing.org/xmlns" 
     [java] Line 4: xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     [java] Line 5: xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns 
     [java] Line 6: http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
     [java] Line 7:  <graph  name="my_name" edgedefault="directed">
     [java] Line 8:  </graph></graphml>
     [java] Line 1:  number of nodes = 6
     [java] Line 1:  number of edges = 5
     [java] Line 1:  processing 0th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #005533
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 0
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#005533", id="0", label="", weight="0.0"]
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 344
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 185
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#005533" id="0" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 0, x = 344, y = 185, node = <node id="0" x="344" y="185"  color="#005533" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="0" x="344" y="185"  color="#005533" label="" weight="0.0"  />
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="0" x="344" y="185"  color="#005533" label="" weight="0.0"  />
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 1th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 1
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = NaN
     [java] ................<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [id="1", label="", weight="NaN"]
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = NaN
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 248
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 97
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  id="1" label="" weight="NaN"  />
     [java] Line 1: newState (element) = 0
     [java] ..................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 1, x = 248, y = 97, node = <node id="1" x="248" y="97"  label="" weight="NaN"  />
     [java] Line 1: adding node <node id="1" x="248" y="97"  label="" weight="NaN"  />
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="1" x="248" y="97"  label="" weight="NaN"  />
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 2th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 2
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="2", label="", weight="0.0"]
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 408
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 109
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="2" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 2, x = 408, y = 109, node = <node id="2" x="408" y="109"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="2" x="408" y="109"  color="#000000" label="" weight="0.0"  />
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="2" x="408" y="109"  color="#000000" label="" weight="0.0"  />
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 3th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 3
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = NaN
     [java] ................<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="3", label="", weight="NaN"]
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = NaN
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 254
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 313
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="3" label="" weight="NaN"  />
     [java] Line 1: newState (element) = 0
     [java] ..................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 3, x = 254, y = 313, node = <node id="3" x="254" y="313"  color="#000000" label="" weight="NaN"  />
     [java] Line 1: adding node <node id="3" x="254" y="313"  color="#000000" label="" weight="NaN"  />
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="3" x="254" y="313"  color="#000000" label="" weight="NaN"  />
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 4th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 4
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="4", label="", weight="0.0"]
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 477
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 336
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="4" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 4, x = 477, y = 336, node = <node id="4" x="477" y="336"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="4" x="477" y="336"  color="#000000" label="" weight="0.0"  />
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="4" x="477" y="336"  color="#000000" label="" weight="0.0"  />
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 5th node.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = false
     [java] Line 1: <- GraphElement, element = <node id="0" x="0" y="0"   />
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute color, value = #000000
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute id, value = 5
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute label, value = 
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.AttributeList.set, key = weight, value = 0.0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.AttributeList.set, list = [color="#000000", id="5", label="", weight="0.0"]
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute weight, value = 0.0
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute x, value = 657
     [java] Line 1: newState (element) = 0
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] Line 1: Node attribute y, value = 237
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: <node id="0" x="0" y="0"  color="#000000" id="5" label="" weight="0.0"  />
     [java] Line 1: newState (element) = 0
     [java] ..................-> edu.ncsu.csc.Galant.graph.component.Node.addState, state number  = 0
     [java] Line 1: addState loop, i = 0, state(i) = 0
     [java] ..................<- edu.ncsu.csc.Galant.graph.component.Node.addState, found = true
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Node.initializeAfterParsing: id = 5, x = 657, y = 237, node = <node id="5" x="657" y="237"  color="#000000" label="" weight="0.0"  />
     [java] Line 1: adding node <node id="5" x="657" y="237"  color="#000000" label="" weight="0.0"  />
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Graph.addNode: node = <node id="5" x="657" y="237"  color="#000000" label="" weight="0.0"  />
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Graph.addNode( Node )
     [java] Line 1:  processing 0th edge.
     [java] Line 1: -> GraphElement, state = 0
     [java] Line 1: -> GraphElementState, state = 0
     [java] Line 1: GraphElementState toString, attributes = []
     [java] Line 1: <- GraphElementState, elementState =  
     [java] ................-> edu.ncsu.csc.Galant.graph.component.Edge.addState, state number  = 0
     [java] ................<- edu.ncsu.csc.Galant.graph.component.Edge.addState, found = false
     [java] Line 1: Edge toString: source = null, target = null
     [java] java.lang.NullPointerException
     [java] 	at edu.ncsu.csc.Galant.graph.component.Edge.toString(Edge.java:109)
     [java] 	at java.lang.String.valueOf(String.java:2981)
     [java] 	at java.lang.StringBuilder.append(StringBuilder.java:131)
     [java] 	at edu.ncsu.csc.Galant.graph.component.GraphElement.<init>(GraphElement.java:67)
     [java] 	at edu.ncsu.csc.Galant.graph.component.Edge.<init>(Edge.java:26)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.buildGraphFromInput(GraphMLParser.java:218)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph(GraphMLParser.java:252)
     [java] 	at edu.ncsu.csc.Galant.graph.parser.GraphMLParser.<init>(GraphMLParser.java:63)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel.<init>(GGraphEditorPanel.java:38)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.addEditorTab(GTabbedPane.java:197)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.open(GTabbedPane.java:449)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.restoreLastState(GTabbedPane.java:232)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GTabbedPane.<init>(GTabbedPane.java:140)
     [java] 	at edu.ncsu.csc.Galant.gui.editor.GEditorFrame.<init>(GEditorFrame.java:73)
     [java] 	at edu.ncsu.csc.Galant.Galant$1.run(Galant.java:26)
     [java] 	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)
     [java] 	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:749)
     [java] 	at java.awt.EventQueue.access$500(EventQueue.java:97)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:702)
     [java] 	at java.awt.EventQueue$3.run(EventQueue.java:696)
     [java] 	at java.security.AccessController.doPrivileged(Native Method)
     [java] 	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)
     [java] 	at java.awt.EventQueue.dispatchEvent(EventQueue.java:719)
     [java] 	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
     [java] 	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
     [java] 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
     [java] 	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
     [java] ..............<- edu.ncsu.csc.Galant.graph.parser.GraphMLParser.generateGraph( String )
     [java] ............<= edu.ncsu.csc.Galant.gui.editor.GGraphEditorPanel()
     [java] ............-> edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/sorting_test.graphml, fileName = sorting_test.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/test.graphml, fileName = test.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/eight_node_graph.graphml, fileName = eight_node_graph.graphml
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Algorithms/dfs_d.alg, fileName = dfs_d.alg
     [java] Line 1: serializeState, filePath = /Users/mfms/Desktop/Git/galant/Example_Graphs/test.graphml, fileName = test.graphml
     [java] ............<- edu.ncsu.csc.Galant.gui.editor.GTabbedPane.serializeState, numberOfFiles = 5
     [java] ............-> edu.ncsu.csc.Galant.GraphDispatch.setWindowSize()
     [java] ............<- edu.ncsu.csc.Galant.GraphDispatch.setWindowSize()
     [java] Line 1: Bounds retrieved for graph_window: java.awt.Rectangle[x=-1608,y=23,width=725,height=798]
     [java] Line 1: Bounds retrieved for text_editor: java.awt.Rectangle[x=-1048,y=23,width=1001,height=728]
     [java] ............-> edu.ncsu.csc.Galant.GraphDispatch.setWindowSize()
     [java] ............<- edu.ncsu.csc.Galant.GraphDispatch.setWindowSize()
     [java] Line 1: Size stored for graph_window: java.awt.Dimension[width=725,height=798]
     [java] Line 1: Size stored for text_editor: java.awt.Dimension[width=1001,height=728]

main:

BUILD SUCCESSFUL
Total time: 8 seconds
<matt> ~/Temp-Git/galant [14:12:29]
$ git status
On branch master
Your branch is ahead of 'origin/master' by 8 commits.
  (use "git push" to publish your local commits)
You are currently reverting commit 001b519.
  (all conflicts fixed: run "git revert --continue")
  (use "git revert --abort" to cancel the revert operation)

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   Algorithms/binary_tree.alg
	modified:   Algorithms/dfs_d.alg
	modified:   Algorithms/insertion_sort.alg
	modified:   Algorithms/kruskal.alg
	modified:   Crossing-Algorithms/mce.alg
	modified:   Crossing-Algorithms/sifting.alg
	modified:   Example_Graphs/test.graphml
	deleted:    galant_bugs.txt
	modified:   src/edu/ncsu/csc/Galant/GraphDispatch.java
	modified:   src/edu/ncsu/csc/Galant/algorithm/Algorithm.java
	modified:   src/edu/ncsu/csc/Galant/algorithm/code/CodeIntegrator.java
	modified:   src/edu/ncsu/csc/Galant/algorithm/code/macro/FetchingMacro.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/Edge.java
	deleted:    src/edu/ncsu/csc/Galant/graph/component/EdgeState.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/Graph.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/GraphElement.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/GraphLayout.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/GraphState.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/Node.java
	deleted:    src/edu/ncsu/csc/Galant/graph/component/NodeState.java
	modified:   src/edu/ncsu/csc/Galant/graph/parser/GraphMLParser.java
	modified:   src/edu/ncsu/csc/Galant/gui/editor/GAlgorithmEditorPanel.java
	modified:   src/edu/ncsu/csc/Galant/gui/editor/GEditorPanel.java
	modified:   src/edu/ncsu/csc/Galant/gui/editor/GTabbedPane.java
	modified:   src/edu/ncsu/csc/Galant/gui/util/EdgeEditDialog.java
	modified:   src/edu/ncsu/csc/Galant/gui/window/GraphWindow.java
	modified:   src/edu/ncsu/csc/Galant/gui/window/panels/ComponentEditPanel.java
	modified:   src/edu/ncsu/csc/Galant/gui/window/panels/GraphPanel.java
	modified:   src/edu/ncsu/csc/Galant/local/LayeredGraph.java
	modified:   src/edu/ncsu/csc/Galant/logging/LogHelper.java
	modified:   testingGalant.docx

no changes added to commit (use "git add" and/or "git commit -a")
<matt> ~/Temp-Git/galant [14:13:29]
$ git status
On branch master
Your branch is ahead of 'origin/master' by 8 commits.
  (use "git push" to publish your local commits)
You are currently reverting commit 001b519.
  (all conflicts fixed: run "git revert --continue")
  (use "git revert --abort" to cancel the revert operation)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   src/edu/ncsu/csc/Galant/Galant.java
	modified:   src/edu/ncsu/csc/Galant/GraphDispatch.java
	modified:   src/edu/ncsu/csc/Galant/algorithm/code/CodeIntegrator.java
	modified:   src/edu/ncsu/csc/Galant/algorithm/code/macro/Macros.java
	modified:   src/edu/ncsu/csc/Galant/graph/component/GraphState.java
	modified:   src/edu/ncsu/csc/Galant/gui/editor/GAlgorithmEditorPanel.java
	modified:   src/edu/ncsu/csc/Galant/gui/util/guiStepExecutor.java
	modified:   src/edu/ncsu/csc/Galant/gui/window/GraphWindow.java
	modified:   src/edu/ncsu/csc/Galant/gui/window/panels/GraphPanel.java

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	regression_test.txt
	regression_tests.txt

no changes added to commit (use "git add" and/or "git commit -a")
<matt> ~/Temp-Git/galant [14:13:54]
$ ant
Buildfile: /Users/mfms/Temp-Git/galant/build.xml

clean:
   [delete] Deleting directory /Users/mfms/Temp-Git/galant/build

compile:
    [mkdir] Created dir: /Users/mfms/Temp-Git/galant/build/classes
     [copy] Copying 5 files to /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/gui/editor/images
     [copy] Copying 24 files to /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/gui/window
    [javac] Compiling 70 source files to /Users/mfms/Temp-Git/galant/build/classes
    [javac] Creating empty /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/algorithm/code/compiled/package-info.class

jar:
    [mkdir] Created dir: /Users/mfms/Temp-Git/galant/build/jar
      [jar] Building jar: /Users/mfms/Temp-Git/galant/build/jar/Galant.jar

run:

main:

BUILD SUCCESSFUL
Total time: 13 seconds
<matt> ~/Temp-Git/galant [14:14:28]
$ git commit -a
[master 9afc4da] Revert "Undoing all the changes I made since version 3.3"
 9 files changed, 33 insertions(+), 89 deletions(-)
<matt> ~/Temp-Git/galant [14:15:17]
$ git push
Counting objects: 35, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (23/23), done.
Writing objects: 100% (35/35), 2.83 KiB | 0 bytes/s, done.
Total 35 (delta 17), reused 0 (delta 0)
To https://github.ncsu.edu/GalantTeam/galant
   001b519..9afc4da  master -> master
<matt> ~/Temp-Git/galant [14:15:30]
$ git checkout kai
Switched to branch 'kai'
Your branch is ahead of 'origin/kai' by 24 commits.
  (use "git push" to publish your local commits)
<matt> ~/Temp-Git/galant [14:15:49]
$ git merge --no-commit master
Updating da5a341..9afc4da
Fast-forward
 current_features_and_bugs.txt                        |  40 +++++
 documents/graph_elements.graffle                     | Bin 0 -> 2233 bytes
 galant_bugs.txt                                      |   0
 kai_regression_tests.txt                             |  26 +++
 older_galant_bugs.txt                                |  58 ++++++
 src/edu/ncsu/csc/Galant/Galant.java                  |   6 +-
 src/edu/ncsu/csc/Galant/GraphDispatch.java           |  19 --
 .../csc/Galant/algorithm/code/CodeIntegrator.java    |   6 +-
 .../ncsu/csc/Galant/algorithm/code/macro/Macros.java |   5 +-
 .../ncsu/csc/Galant/graph/component/Attribute.java   |  19 ++
 .../csc/Galant/graph/component/AttributeList.java    | 204 ++++++++++++++++++++++
 .../csc/Galant/graph/component/BooleanAttribute.java |  17 ++
 .../csc/Galant/graph/component/DoubleAttribute.java  |  17 ++
 .../ncsu/csc/Galant/graph/component/EdgeState.java   |   0
 .../Galant/graph/component/GraphElementState.java    | 152 ++++++++++++++++
 .../ncsu/csc/Galant/graph/component/GraphState.java  |   2 +-
 .../csc/Galant/graph/component/IntegerAttribute.java |  17 ++
 .../ncsu/csc/Galant/graph/component/NodeState.java   |   0
 .../csc/Galant/graph/component/StringAttribute.java  |  17 ++
 .../csc/Galant/gui/editor/GAlgorithmEditorPanel.java |  10 +-
 .../ncsu/csc/Galant/gui/util/guiStepExecutor.java    |  44 +----
 src/edu/ncsu/csc/Galant/gui/window/GraphWindow.java  |  18 +-
 .../csc/Galant/gui/window/panels/GraphPanel.java     |  12 +-
 23 files changed, 600 insertions(+), 89 deletions(-)
 create mode 100644 current_features_and_bugs.txt
 create mode 100644 documents/graph_elements.graffle
 mode change 100644 => 100755 galant_bugs.txt
 create mode 100644 kai_regression_tests.txt
 create mode 100644 older_galant_bugs.txt
 create mode 100644 src/edu/ncsu/csc/Galant/graph/component/Attribute.java
 create mode 100644 src/edu/ncsu/csc/Galant/graph/component/AttributeList.java
 create mode 100644 src/edu/ncsu/csc/Galant/graph/component/BooleanAttribute.java
 create mode 100644 src/edu/ncsu/csc/Galant/graph/component/DoubleAttribute.java
 mode change 100644 => 100755 src/edu/ncsu/csc/Galant/graph/component/EdgeState.java
 create mode 100644 src/edu/ncsu/csc/Galant/graph/component/GraphElementState.java
 create mode 100644 src/edu/ncsu/csc/Galant/graph/component/IntegerAttribute.java
 mode change 100644 => 100755 src/edu/ncsu/csc/Galant/graph/component/NodeState.java
 create mode 100644 src/edu/ncsu/csc/Galant/graph/component/StringAttribute.java
<matt> ~/Temp-Git/galant [14:16:06]
$ git checkout master
Switched to branch 'master'
Your branch is up-to-date with 'origin/master'.
<matt> ~/Temp-Git/galant [14:16:47]
$ ant
Buildfile: /Users/mfms/Temp-Git/galant/build.xml

clean:
   [delete] Deleting directory /Users/mfms/Temp-Git/galant/build

compile:
    [mkdir] Created dir: /Users/mfms/Temp-Git/galant/build/classes
     [copy] Copying 5 files to /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/gui/editor/images
     [copy] Copying 24 files to /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/gui/window
    [javac] Compiling 70 source files to /Users/mfms/Temp-Git/galant/build/classes
    [javac] Creating empty /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/algorithm/code/compiled/package-info.class

jar:
    [mkdir] Created dir: /Users/mfms/Temp-Git/galant/build/jar
      [jar] Building jar: /Users/mfms/Temp-Git/galant/build/jar/Galant.jar

run:

main:

BUILD SUCCESSFUL
Total time: 38 seconds
<matt> ~/Temp-Git/galant [14:17:28]
$ git checkout master
Already on 'master'
Your branch is up-to-date with 'origin/master'.
<matt> ~/Temp-Git/galant [14:17:46]
$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
Untracked files:
  (use "git add <file>..." to include in what will be committed)

	regression_test.txt
	regression_tests.txt

nothing added to commit but untracked files present (use "git add" to track)
<matt> ~/Temp-Git/galant [14:17:51]
$ git checkout kai
Switched to branch 'kai'
Your branch is ahead of 'origin/kai' by 52 commits.
  (use "git push" to publish your local commits)
<matt> ~/Temp-Git/galant [14:18:02]
$ git merge master
Already up-to-date.
<matt> ~/Temp-Git/galant [14:18:24]
$ ant
Buildfile: /Users/mfms/Temp-Git/galant/build.xml

clean:
   [delete] Deleting directory /Users/mfms/Temp-Git/galant/build

compile:
    [mkdir] Created dir: /Users/mfms/Temp-Git/galant/build/classes
     [copy] Copying 5 files to /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/gui/editor/images
     [copy] Copying 24 files to /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/gui/window
    [javac] Compiling 70 source files to /Users/mfms/Temp-Git/galant/build/classes
    [javac] Creating empty /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/algorithm/code/compiled/package-info.class

jar:
    [mkdir] Created dir: /Users/mfms/Temp-Git/galant/build/jar
      [jar] Building jar: /Users/mfms/Temp-Git/galant/build/jar/Galant.jar

run:

main:

BUILD SUCCESSFUL
Total time: 8 seconds
<matt> ~/Temp-Git/galant [14:18:46]
$ git checkout master
Switched to branch 'master'
Your branch is up-to-date with 'origin/master'.
<matt> ~/Temp-Git/galant [14:19:00]
$ git branch yni2
<matt> ~/Temp-Git/galant [14:19:17]
$ git branch wli21
<matt> ~/Temp-Git/galant [14:19:54]
$ git checkout yni2
Switched to branch 'yni2'
<matt> ~/Temp-Git/galant [14:20:12]
$ git commit
On branch yni2
Untracked files:
	regression_test.txt
	regression_tests.txt

nothing added to commit but untracked files present
<matt> ~/Temp-Git/galant [14:20:28]
$ git rm regression_test*
fatal: pathspec 'regression_test.txt' did not match any files
<matt> ~/Temp-Git/galant [14:20:53]
$ git rm regression_test.txt
fatal: pathspec 'regression_test.txt' did not match any files
<matt> ~/Temp-Git/galant [14:21:06]
$ git push
fatal: The current branch yni2 has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin yni2

<matt> ~/Temp-Git/galant [14:21:25]
$ git push --set-upstream origin yni2
Total 0 (delta 0), reused 0 (delta 0)
To https://github.ncsu.edu/GalantTeam/galant
 * [new branch]      yni2 -> yni2
Branch yni2 set up to track remote branch yni2 from origin.
<matt> ~/Temp-Git/galant [14:21:37]
$ git checkout wli21
Switched to branch 'wli21'
<matt> ~/Temp-Git/galant [14:21:55]
$ git push --set-upstream origin wli21
Total 0 (delta 0), reused 0 (delta 0)
To https://github.ncsu.edu/GalantTeam/galant
 * [new branch]      wli21 -> wli21
Branch wli21 set up to track remote branch wli21 from origin.
<matt> ~/Temp-Git/galant [14:22:07]
$ git checkout kai
Switched to branch 'kai'
Your branch is ahead of 'origin/kai' by 52 commits.
  (use "git push" to publish your local commits)
<matt> ~/Temp-Git/galant [14:24:51]
$ ant
Buildfile: /Users/mfms/Temp-Git/galant/build.xml

clean:
   [delete] Deleting directory /Users/mfms/Temp-Git/galant/build

compile:
    [mkdir] Created dir: /Users/mfms/Temp-Git/galant/build/classes
     [copy] Copying 5 files to /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/gui/editor/images
     [copy] Copying 24 files to /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/gui/window
    [javac] Compiling 70 source files to /Users/mfms/Temp-Git/galant/build/classes
    [javac] Creating empty /Users/mfms/Temp-Git/galant/build/classes/edu/ncsu/csc/Galant/algorithm/code/compiled/package-info.class

jar:
    [mkdir] Created dir: /Users/mfms/Temp-Git/galant/build/jar
      [jar] Building jar: /Users/mfms/Temp-Git/galant/build/jar/Galant.jar

run:
^C<matt> ~/Temp-Git/galant [14:25:21]
$ ls
Algorithms/                    galant_bugs.txt*
Crossing-Algorithms/           hs_err_pid25790.log
Crossing_Graphs/               kai_regression_tests.txt
Example_Graphs/                kpresle_log.txt
README.md                      older_galant_bugs.txt
Testing/                       regression_test.txt*
build/                         regression_tests.txt*
build.xml                      src/
current_features_and_bugs.txt  testingGalant.docx
doc/                           threads_algorithm_code.java
documents/                     weight_occurences.txt
<matt> ~/Temp-Git/galant [14:25:24]
$ git status
On branch kai
Your branch is ahead of 'origin/kai' by 52 commits.
  (use "git push" to publish your local commits)
Untracked files:
  (use "git add <file>..." to include in what will be committed)

	regression_test.txt
	regression_tests.txt

nothing added to commit but untracked files present (use "git add" to track)
<matt> ~/Temp-Git/galant [14:25:35]
$ git push
Total 0 (delta 0), reused 0 (delta 0)
To https://github.ncsu.edu/GalantTeam/galant
   1bfea91..9afc4da  kai -> kai
<matt> ~/Temp-Git/galant [14:25:48]
$ 
